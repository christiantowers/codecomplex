<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); /** * * Acme_Engine * * Classe abstracao para motor de gera&ccedil;&atilde;o de c&oacute;digos, instala&ccedil;&atilde;o e atualiza&ccedil;&atilde;o de sistema. Esta * classe contempla os m&eacute;todos de implementa&ccedil;&atilde;o dos seguintes m&oacute;dulos: * * - Acme_Installer (instalador do sistema) * - Acme_Maker (criador de m&oacute;dulos internos do sistema) * - Acme_Updater (atualizador do sistema, atrav&eacute;s de pacotes de atualiza&ccedil;&atilde;o) * * Para maiores detalhes, analise o conjunto de fun&ccedil;&otilde;es que cada m&oacute;dulo possui atrav&eacute;s do bloco * de coment&aacute;rios dispon&iacute;vel no decorrer da classe. * * @since 15/10/2012 * @location acme.core.acme_engine * */ abstract class Acme_Engine extends Acme_Core { // Defini&ccedil;&atilde;o de atributos public $file_method_process = 'xml'; public $file_module_extension = 'xml'; public $path_module_packages = 'application/uploads/acme/packages_update'; /** * __construct() * Construtor de classe. * @return object */ public function __construct() { parent::__construct(); } // ------------------------------------------------------------------------------------------ // CONJUNTO DE FUN&Ccedil;&Otilde;ES DO MOTOR DE ACME ENGINE UTILIZADAS NO M&Oacute;DULO DE INSTALA&Ccedil;&Atilde;O. // ------------------------------------------------------------------------------------------ // application/controllers/acme/acme_installer =&gt; M&oacute;dulo respons&aacute;vel pela instala&ccedil;&atilde;o do // sistema ACME de forma a torn&aacute;-lo um novo sistema. // O conjunto de fun&ccedil;&otilde;es abaixo contemplam valida&ccedil;&otilde;es dos requisitos do ambiente atual, // bibliotecas ativas e conjunto de configura&ccedil;&otilde;es de banco de dados. S&atilde;o estas fun&ccedil;&otilde;es: // // $this-&gt;_check_installer_permissions() // Verifica as permiss&otilde;es necess&aacute;rias para o instalador funcionar. // // $this-&gt;_analyze_system_requirements() // Verifica os requisitos de sistema necess&aacute;rios para que o ACME Engine possa ser instalado. // // $this-&gt;_analyze_install() // Analisa os dados do post do formul&aacute;rio de instala&ccedil;&atilde;o (verifica a integridade, etc). // // $this-&gt;_install_acme_engine() // Realiza a instala&ccedil;&atilde;o do ACME Engine com base nas informa&ccedil;&otilde;es de post encaminhadas e j&aacute; // validadas anteriormete. // ------------------------------------------------------------------------------------------ /** * _check_installer_permissions() * Checa as permiss&otilde;es necess&aacute;rias para o installer funcionar. Retorna true caso permissions ok * ou false, caso falta de permissao. * @return boolean status */ public function _check_installer_permissions() { $return = true; if(is_writable('application/controllers') === false &amp;&amp; is_readable('application/controllers') === false) { $return = false; } else if(is_writable('application/core') === false &amp;&amp; is_readable('application/core') === false) { $return = false; } else if(is_writable('application/config') === false &amp;&amp; is_readable('application/config') === false) { $return = false; } else if(is_writable('application/config/acme') === false &amp;&amp; is_readable('application/config/acme') === false) { $return = false; } else if(file_exists('application/core/acme/engine_files/installer_dump_database.sql') === false || file_exists('application/core/acme/engine_files/installer_template_acme_installer.php') === false || file_exists('application/core/acme/engine_files/installer_template_application_settings.php') === false) { $return = false; } return $return; } /** * _analyze_system_requirements() * Verifica as configura&ccedil;&otilde;es do sistema com base no necess&aacute;rio para que o sistema ACME Engine * possa ser instalado (configura&ccedil;&otilde;es de php, banco de dados e extens&otilde;es). Retorna true em caso * de sucesso, ou um array associativo com mensagens de erro. Parametro array com configuracoes * de banco de dados deve ser encaminhado. * @param array db_params * @return mixed status/array */ public function _analyze_system_requirements($db_params = array()) { // Mensagem de retorno $return = array(); // PHP 5.3.5 ou superior if(!is_php('5.3.5')) { $return['php_version'] = lang('PHP 5.3.5 ou superior'); } // MySQL 5.0 ou superior $output = @shell_exec('mysql -V'); @preg_match('@[0-9]+\.[0-9]+\.[0-9]+@', $output, $version); $version = isset($version[0]) ? abs($version[0]) : 0; if($version &lt; 5) { $return['mysql_version'] = lang('MySQL 5.0 ou superior'); } // Extens&atilde;o do mysql no php if(!extension_loaded('mysql')) { $return['php_mysql_extension'] = lang('Extens&atilde;o <span style="text-decoration: underline;">mysql</span> ativada no PHP'); } // Testa conex&atilde;o mysql (todos os campos devem estar preenchidos) if(get_value($db_params, 'hostname') != '' &amp;&amp; get_value($db_params, 'username') != '' &amp;&amp; get_value($db_params, 'port') != '' &amp;&amp; get_value($db_params, 'database') != '') { // Abre link de conex&atilde;o com banco $link = @mysqli_connect($db_params['hostname'], $db_params['username'], $db_params['password'], null, $db_params['port']); // Link com problemas if(!$link) { $return['mysql_connection'] = mysqli_connect_error(); } else { // Link sem problemas, testa tamb&eacute;m permiss&otilde;es de usu&aacute;rio @mysqli_select_db($link, 'mysql'); $result = @mysqli_query($link, "SELECT user, select_priv, insert_priv, create_priv FROM mysql.user WHERE host = '" . $db_params['hostname'] . "' AND user = '" . $db_params['username'] . "'"); $result = @mysqli_fetch_assoc($result); // Testa privil&eacute;gios do usu&aacute;rio if(strtolower(get_value($result, 'select_priv')) != 'y') { $return['mysql_user_permission_select'] = lang('Acesso ao banco de dados: usu&aacute;rio sem permiss&atilde;o para realiza&ccedil;&atilde;o de consultas - SELECT'); } elseif(strtolower(get_value($result, 'insert_priv')) != 'y') { $return['mysql_user_permission_insert'] = lang('Acesso ao banco de dados: usu&aacute;rio sem permiss&atilde;o para realiza&ccedil;&atilde;o de inser&ccedil;&otilde;es - INSERT'); } elseif(strtolower(get_value($result, 'create_priv')) != 'y') { $return['mysql_user_permission_create'] = lang('Acesso ao banco de dados: usu&aacute;rio sem permiss&atilde;o para cria&ccedil;&atilde;o de tabelas e schemas - CREATE'); } else { // Testa se existe banco de dados com o nome informado $result = @mysqli_query($link, "SELECT count(*) AS COUNT_CREATE FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '" . $db_params['database'] . "'"); $result = @mysqli_fetch_assoc($result); if(get_value($result, 'COUNT_CREATE') &gt; 0) { $return['mysql_database_exists'] = lang('Acesso ao banco de dados: schema') . ' <span style="text-decoration: underline;">' . $db_params['database'] . '</span> ' . lang('j&aacute; existe'); } } // Fecha conex&atilde;o @mysqli_close($link); } } else { $return['mysql_connection_information'] = lang('Informa&ccedil;&otilde;es de conex&atilde;o n&atilde;o encaminhadas'); } // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Retorno ajustado return $return; } /** * analyze_install() * Verifica as informa&ccedil;&otilde;es encaminhadas por post de um formul&aacute;rio de instala&ccedil;&atilde;o do sistema. Retorna * true em caso de sucesso ou um array de mensagens de erro. * @param array settings (post) * @return mixed status/array */ public function _analyze_install($settings = array()) { $return = array(); // ------------------------------------------------------------- // VALIDA DIRET&Oacute;RIOS (na vers&atilde;o inicial, paths ser&atilde;o engessados) // ------------------------------------------------------------- /* if(get_value($settings, 'dir_img') == '') { $return['dir_img'] = lang('Diret&oacute;rio de imagens n&atilde;o informado'); } else if(!$this-&gt;validation-&gt;is_letter_number_chr_specials(get_value($settings, 'dir_js'))) { $return['dir_img'] = lang('Diret&oacute;rio de imagens deve conter apenas letras, n&uacute;meros, pontos ou underscores'); } if(get_value($settings, 'dir_css') == '') { $return['dir_css'] = lang('Diret&oacute;rio de estilos (css) n&atilde;o informado'); } else if(!$this-&gt;validation-&gt;is_letter_number_chr_specials(get_value($settings, 'dir_js'))) { $return['dir_css'] = lang('Diret&oacute;rio de estilos (css) deve conter apenas letras, n&uacute;meros, pontos ou underscores'); } if(get_value($settings, 'dir_js') == '') { $return['dir_js'] = lang('Diret&oacute;rio de scripts n&atilde;o informado'); } else if(!$this-&gt;validation-&gt;is_letter_number_chr_specials(get_value($settings, 'dir_js'))) { $return['dir_js'] = lang('Diret&oacute;rio de scripts deve conter apenas letras, n&uacute;meros, pontos ou underscores'); } */ // ------------------------------------ // VALIDA INFORMA&Ccedil;&Otilde;ES DA NOVA APLICA&Ccedil;&Atilde;O // ------------------------------------ if(get_value($settings, 'info_app_name') == '') { $return['info_app_name'] = lang('Nome da nova aplica&ccedil;&atilde;o n&atilde;o informado'); } else if(!$this-&gt;validation-&gt;is_letter_number_chr_specials(get_value($settings, 'info_app_name'))) { $return['info_app_name'] = lang('Nome da nova aplica&ccedil;&atilde;o deve conter apenas letras, n&uacute;meros, pontos ou underscores'); } if(get_value($settings, 'info_app_title') == '') { $return['info_app_name'] = lang('T&iacute;tulo padr&atilde;o das p&aacute;ginas da nova aplica&ccedil;&atilde;o n&atilde;o informado'); } // Valida e upload de logo (se der certo sempre vai substituir o logo atual) $config['overwrite'] = true; $config['file_name'] = 'logo'; $config['upload_path'] = PATH_INCLUDE . '/img/'; $config['allowed_types'] = 'gif|jpg|png|jpeg'; $config['max_size'] = '2000'; $config['max_width'] = '180'; $config['max_height'] = '180'; $this-&gt;load-&gt;library('upload', $config); if(!$this-&gt;upload-&gt;do_upload('info_app_logo')) { $return['info_app_logo'] = $this-&gt;upload-&gt;display_errors('<span>','</span>'); } // DEBUG: // $upload_data = $this-&gt;upload-&gt;data(); // print_r($upload_data); if(isset($_FILES['info_app_favicon']['name'])) { if($_FILES['info_app_favicon']['name'] != '') { unset($config); $config['overwrite'] = true; $config['file_name'] = '_favicon'; $config['upload_path'] = PATH_INCLUDE . '/img/'; $config['allowed_types'] = 'ico'; $config['max_size'] = '500'; $config['max_width'] = '16'; $config['max_height'] = '16'; $this-&gt;upload-&gt;initialize($config); if(!$this-&gt;upload-&gt;do_upload('info_app_favicon')) { $upload_data = $this-&gt;upload-&gt;data(); $return['info_app_favicon'] = $this-&gt;upload-&gt;display_errors('<span>','</span>'); //DEBUG // print_r($upload_data); // print_r($this-&gt;upload); } } } // ------------------------------------ // VALIDA INFORMA&Ccedil;&Otilde;ES DO USUARIO-MESTRE // ------------------------------------ if(get_value($settings, 'usr_name') == '') { $return['usr_name'] = lang('Nome do usu&aacute;rio n&atilde;o informado'); } if(get_value($settings, 'usr_email') == '') { $return['usr_email'] = lang('Email do usu&aacute;rio n&atilde;o informado'); } else if(!$this-&gt;validation-&gt;is_email(get_value($settings, 'usr_email'))) { $return['usr_email'] = lang('Email do usu&aacute;rio deve ser um email v&aacute;lido'); } if(get_value($settings, 'usr_login') == '') { $return['usr_login'] = lang('Login do usu&aacute;rio n&atilde;o informado'); } if(get_value($settings, 'usr_pass') == '') { $return['usr_pass'] = lang('Senha do usu&aacute;rio n&atilde;o informada'); } else if(get_value($settings, 'usr_pass') != get_value($settings, 'usr_pass_confirm')) { $return['usr_pass'] = lang('Senha e confirmar senha n&atilde;o correspondem'); } if(get_value($settings, 'usr_pass_confirm') == '') { $return['usr_pass_confirm'] = lang('Confirma&ccedil;&atilde;o de senha do usu&aacute;rio n&atilde;o informada'); } // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Retorno ajustado return $return; } /** * install_acme_engine() * Instala o subsistema ACME Engine. Espera que anteriormente a chamada desta fun&ccedil;&atilde;o seja * analisado as configura&ccedil;&otilde;es, atrav&eacute;s do m&eacute;todo _analyze_install. * @param array settings (post) * @return void */ public function _install_acme_engine($settings = array()) { // Carrega helper de seguran&ccedil;a $this-&gt;load-&gt;helper('security'); // ----------------------------------- // CRIA&Ccedil;&Atilde;O DE BANCO DE DADOS INFORMADO // ----------------------------------- // Conecta no banco utilizando objeto do CI $config['hostname'] = get_value($settings, 'db_host'); $config['username'] = get_value($settings, 'db_user'); $config['password'] = get_value($settings, 'db_pass'); $config['database'] = ''; $config['dbdriver'] = "mysql"; $config['dbprefix'] = ""; $config['pconnect'] = FALSE; $config['db_debug'] = TRUE; $config['cache_on'] = FALSE; $config['cachedir'] = ""; $config['char_set'] = "utf8"; $config['dbcollat'] = "utf8_general_ci"; $this-&gt;load-&gt;database($config); $this-&gt;load-&gt;dbforge(); // Se conseguir criar banco, prossegue com importa&ccedil;&atilde;o if($this-&gt;dbforge-&gt;create_database(get_value($settings, 'db_database'))) { // Recria obj db com database informado unset($this-&gt;db); $config['database'] = get_value($settings, 'db_database'); $this-&gt;load-&gt;database($config); // Carrega script de dump do banco de dados $link = mysqli_connect(get_value($settings, 'db_host'), get_value($settings, 'db_user'), get_value($settings, 'db_pass'), get_value($settings, 'db_database'), get_value($settings, 'db_port')); $result = mysqli_multi_query($link, str_replace('<database>', get_value($settings, 'db_database'), file_get_contents('application/core/acme/engine_files/installer_dump_database.sql'))); // Varre todas as instru&ccedil;&otilde;es armazenadas para acabar com o asincrono do { if($result = mysqli_store_result($link)){ mysqli_free_result($result); } } while(mysqli_next_result($link)); // Caso n&atilde;o existam erros no dump if(!mysqli_error($link)) { // Fecha conex&atilde;o e prossegue com objeto do CI mysqli_close($link); // Faz update do usu&aacute;rio-mestre pelo informado $this-&gt;db-&gt;set('login', xss_clean(get_value($settings, 'usr_login')), true); $this-&gt;db-&gt;set('password', md5(get_value($settings, 'usr_pass')), true); $this-&gt;db-&gt;set('name', str_replace("'", "''", get_value($settings, 'usr_name')), true); $this-&gt;db-&gt;set('email', str_replace("'", "''", get_value($settings, 'usr_email')), true); $this-&gt;db-&gt;set('log_dtt_ins', 'CURRENT_TIMESTAMP', false); $this-&gt;db-&gt;where(array('id_user' =&gt; 1)); $this-&gt;db-&gt;update('acm_user'); } } // Substitui conte&uacute;do do arquivo settings (do acme) $settings_file = file_get_contents('application/core/acme/engine_files/installer_template_application_settings.php'); $settings_file = str_replace('&lt;APP_NAME&gt;', get_value($settings, 'info_app_name'), $settings_file); $settings_file = str_replace('&lt;APP_TITLE&gt;', get_value($settings, 'info_app_title'), $settings_file); $settings_file = str_replace('&lt;DB_HOST&gt;', get_value($settings, 'db_host'), $settings_file); $settings_file = str_replace('&lt;DB_PORT&gt;', get_value($settings, 'db_port'), $settings_file); $settings_file = str_replace('&lt;DB_USER&gt;', get_value($settings, 'db_user'), $settings_file); $settings_file = str_replace('&lt;DB_PASS&gt;', get_value($settings, 'db_pass'), $settings_file); $settings_file = str_replace('&lt;DB_DATABASE&gt;', get_value($settings, 'db_database'), $settings_file); $settings_file = str_replace('&lt;EMAIL_PROTOCOL&gt;', get_value($settings, 'email_protocol'), $settings_file); $settings_file = str_replace('&lt;EMAIL_SMTP_HOST&gt;', get_value($settings, 'email_smtp_host'), $settings_file); $settings_file = str_replace('&lt;EMAIL_SMTP_PORT&gt;', get_value($settings, 'email_smtp_port'), $settings_file); $settings_file = str_replace('&lt;EMAIL_SMTP_TIMEOUT&gt;', get_value($settings, 'email_smtp_timeout'), $settings_file); $settings_file = str_replace('&lt;EMAIL_SMTP_USER&gt;', get_value($settings, 'email_smtp_user'), $settings_file); $settings_file = str_replace('&lt;EMAIL_SMTP_PASS&gt;', get_value($settings, 'email_smtp_pass'), $settings_file); $settings_file = str_replace('&lt;EMAIL_GLOBAL_NAME_FROM&gt;', get_value($settings, 'email_global_name_from'), $settings_file); $settings_file = str_replace('&lt;EMAIL_GLOBAL_ADDRESS_FROM&gt;', get_value($settings, 'email_global_address_from'), $settings_file); file_put_contents('application/config/application_settings.php', $settings_file); // Substitui conteudo do arquivo routes (para direcionar para a tela de login) $routes_file = file_get_contents('application/config/routes.php'); file_put_contents('application/config/routes.php', str_replace('$route[\'default_controller\'] = "acme/acme_installer";', '$route[\'default_controller\'] = "acme/acme_access";', $routes_file)); // Substitui o core, faz carregar database $core_file = file_get_contents('application/core/acme/acme_core.php'); file_put_contents('application/core/acme/acme_core.php', str_replace('// &lt;LOAD_DATABASE&gt;', '$this-&gt;load-&gt;database();', $core_file)); // Substitui o app_config, faz carregar vari&aacute;veis do banco de dados $core_file = file_get_contents('application/libraries/acme/app_config.php'); file_put_contents('application/libraries/acme/app_config.php', str_replace('// &lt;LOAD_CONFIGS_DATABASE&gt;', '$this-&gt;load_configs_db();', $core_file)); // Substitui conte&uacute;do do acme_access $access_file = file_get_contents('application/controllers/acme/acme_access.php'); file_put_contents('application/controllers/acme/acme_access.php', str_replace('redirect(\'acme_installer\');', '', $access_file)); // Substitui arquivo installer $installer_file = file_get_contents('application/core/acme/engine_files/installer_template_acme_installer.php'); file_put_contents('application/controllers/acme/acme_installer.php', $installer_file); } // ------------------------------------------------------------------------------------------ // CONJUNTO DE FUN&Ccedil;&Otilde;ES DO M&Oacute;DULO MAKER, OU CRIADOR DE M&Oacute;DULOS INTERNOS DO SISTEMA // ------------------------------------------------------------------------------------------ // application/controllers/acme/acme_maker =&gt; M&oacute;dulo respons&aacute;vel pela cria&ccedil;&atilde;o de outros // m&oacute;dulos internos do sistema. O conjunto de fun&ccedil;&otilde;es abaixo contemplam valida&ccedil;&otilde;es dos requisitos // necess&aacute;rios para a constru&ccedil;&atilde;o de um novo m&oacute;dulo, valida&ccedil;&otilde;es de arquivos de m&oacute;dulos, paths // e afins. // // $this-&gt;_check_maker_permissions() // Verifica as permiss&otilde;es necess&aacute;rias para o maker funcionar. // // $this-&gt;_check_path_permissions() // Verifica as permiss&otilde;es de um determinado path. // // $this-&gt;_create_module_file() // Cria um arquivo de m&oacute;dulo com base numa string xml/ini de arquivo encaminhada. // // $this-&gt;_update_module_file() // Atualiza o conte&uacute;do de um arquivo de m&oacute;dulo j&aacute; criado anteriormente. // // $this-&gt;_delete_module_file() // Remove um arquivo de m&oacute;dulo anteriormente criado. // // $this-&gt;_analyze_module_file() // Analisa a integridade e conte&uacute;do de um arquivo de m&oacute;dulo criado com base no m&eacute;todo de // cria&ccedil;&atilde;o setado para leitura e valida&ccedil;&atilde;o atualmente nesta classe. // // $this-&gt;_analyze_module_file_ini() // Analisa a integridade e conte&uacute;do de um arquivo de m&oacute;dulo utilizando metodo de leitura de // arquivos no formato .ini // // $this-&gt;_analyze_module_file_xml() // Analisa a integridade e conte&uacute;do de um arquivo de m&oacute;dulo utilizando metodo de leitura de // arquivos no formato .xml // // $this-&gt;_analyze_table() // Analisa a integridade e formato de uma tabela informada no conte&uacute;do do arquivo de m&oacute;dulo, // verificando se ela est&aacute; no formato adequado. // // $this-&gt;_process_module_file() // Processa um arquivo de m&oacute;dulo, anteriormente validado, com base no m&eacute;todo de leitura/cria&ccedil;&atilde;o // atualmente setado para esta classe. // // $this-&gt;_process_module_file_ini() // Processa um arquivo de m&oacute;dulo no formato ini, retorna um array com os dados formatados // do m&oacute;dulo. // // $this-&gt;_process_module_file_xml() // Processa um arquivo de m&oacute;dulo no formato xml, retorna um array com os dados formatados // do m&oacute;dulo. // // $this-&gt;_create_module() // Cria um m&oacute;dulo, com base no arquivo de m&oacute;dulo de nome encaminhado. // // $this-&gt;_get_skeleton_module_file() // Retorna o conte&uacute;do do esqueleto de um arquivo de m&oacute;dulo, com base no tipo encaminhado // (ini ou xml). // // $this-&gt;_get_skeleton_custom_section() // Para arquivos tipo ini, retorna o conte&uacute;do de uma se&ccedil;&atilde;o espec&iacute;fica de string encaminhada. // // $this-&gt;_get_skeleton_custom_section() // Para arquivos tipo ini, retorna o conte&uacute;do de uma se&ccedil;&atilde;o espec&iacute;fica de string encaminhada. // ------------------------------------------------------------------------------------------ /** * _check_maker_permissions() * Checa as permiss&otilde;es necess&aacute;rias para o maker funcionar. Retorna true caso permissions ok * ou false, caso falta de permissao. * @return boolean status */ public function _check_maker_permissions() { $return = true; if(is_writable('application/controllers') === false &amp;&amp; @opendir('application/controllers') === false) { $return = false; } else if(is_writable('application/models') === false &amp;&amp; @opendir('application/models') === false) { $return = false; } else if(is_writable('application/views/' . TEMPLATE) === false &amp;&amp; @opendir('application/views/' . TEMPLATE) === false) { $return = false; } else if(is_writable('application/core/acme/engine_files') === false &amp;&amp; @opendir('application/core/acme/engine_files') === false) { $return = false; } else if(file_exists('application/core/acme/engine_files/maker_template_controller.php') === false || file_exists('application/core/acme/engine_files/maker_template_model.php') === false || file_exists('application/core/acme/engine_files/maker_template_module_file.xml') === false || file_exists('application/core/acme/engine_files/maker_template_module_file.ini') === false || file_exists('application/core/acme/engine_files/maker_template_module_file_custom_action.ini') === false || file_exists('application/core/acme/engine_files/maker_template_module_file_custom_menu.ini') === false || file_exists('application/core/acme/engine_files/maker_template_module_file_custom_permission.ini') === false) { $return = false; } return $return; } /** * _check_path_permissions() * Checa as permiss&otilde;es de um path de nome encaminhado. Retorna true caso path possa ser escrito * e lido ou false, caso falta de permissao. * @param string path_name * @return boolean status */ public function _check_path_permissions($path_name = '') { return (is_writable($path_name) === false &amp;&amp; @opendir($path_name) === false) ? false : true; } /** * _check_file_permissions() * Checa as permiss&otilde;es de um arquivo de m&oacute;dulo de nome encaminhado. Retorna true caso * arquivo possa ser escrito e lido ou false, caso falta de permissao. * @param string file_name * @return boolean status */ public function _check_file_permissions($file_name = '') { return (is_writable($file_name) === false &amp;&amp; is_readable($file_name) === false) ? false : true; } /** * _create_module_file() * Cria arquivo de m&oacute;dulo com base em uma string encaminhada. Retorna nome do arquivo * em caso de sucesso ou false, caso falha na cria&ccedil;&atilde;o. A cria&ccedil;&atilde;o de arquivo se baseia na extens&atilde;o * atualmente setada para m&oacute;dulos (default: xml). * @param string file_content * @param string path_module_files * @return mixed (file_name/status) */ public function _create_module_file($ini_string = '', $path_module_files = '') { // Parse b&aacute;sico no conte&uacute;do $content = @parse_ini_string($ini_string, true); // Coleta se&ccedil;&atilde;o module, do conteudo $module = get_value($content, 'module'); // Nome do arquivo $file_name = (get_value($module, 'controller') != '') ? get_value($module, 'controller') . '_' . uniqid() : uniqid(); $path_file_name = $path_module_files . '/' . $file_name . '.' . $this-&gt;file_module_extension; if(file_put_contents($path_file_name, $ini_string) === false) { return false; } else { return $file_name . '.' . $this-&gt;file_module_extension; } } /** * _update_module_file() * Altera o conteudo de um arquivo de m&oacute;dulo (.ini) com base em uma string_ini encaminhada. * Retorna true ou false, caso falhe a opera&ccedil;&atilde;o. * @param string ini_string * @param string file_name * @return boolean status */ public function _update_module_file($ini_string = '', $file_name = '') { return (file_put_contents($file_name, $ini_string) === false) ? false : true; } /** * _delete_module_file() * Deleta um arquivo de de m&oacute;dulo (.ini) com base em no nome de arquivo encaminhado. * Retorna true ou false, caso falhe a opera&ccedil;&atilde;o. * @param string file_name * @return boolean status */ public function _delete_module_file($file_name = '') { return unlink($file_name); } /** * _analyze_module_file() * Analisa o arquivo de nome encaminhado, verificando se ele preenche as regras b&aacute;sicas de * um arquivo de configura&ccedil;&atilde;o de m&oacute;dulo, isto &eacute;, se possui as se&ccedil;&otilde;es obrigat&oacute;rias e se os valores * das chaves est&atilde;o dentro do esperado. Retorna true caso arquivo v&aacute;lido, outro caso, um array * associativo de mensagens de erro, contendo a se&ccedil;&atilde;o que deu problema e a chave desta se&ccedil;&atilde;o. A * an&aacute;lise &eacute; feita com base no m&eacute;todo de processamento atualmente setado (default: xml). * @param string file_name * @return mixed status/array */ public function _analyze_module_file($file_name = '') { switch(strtolower($this-&gt;file_method_process)) { case 'ini': return $this-&gt;_analyze_module_file_ini($file_name); break; case 'xml': default: return $this-&gt;_analyze_module_file_xml($file_name); break; } } /** * _analyze_module_file_ini() * Analisa o arquivo de nome encaminhado tendo como base o m&eacute;todo de valida&ccedil;&atilde;o de arquivos de * extens&atilde;o .ini (configura&ccedil;&atilde;o). Verifica se&ccedil;&otilde;es obrigat&oacute;rias e retorna array contendo erros * ou true, caso arquivo seja v&aacute;lido. * @param string file_name * @return mixed status/array */ public function _analyze_module_file_ini($file_name = '') { // Inicializa Vari&aacute;vel de erro/retorno $return = array(); if(@parse_ini_file($file_name, true) == true) { // Abre o arquivo, le e parse no conteudo $file = file_get_contents($file_name); $content = parse_ini_string($file, true); // DEBUG: // print_r($content); // 1 verifica&ccedil;&atilde;o: chaves principais existem $main_keys = array_flip(array('module', 'forms', 'permissions', 'actions', 'menus', 'link_to_module')); foreach($main_keys as $key =&gt; $value) { if(array_key_exists($key, $content) === false) { $return[$key]['error'] = lang('A se&ccedil;&atilde;o <strong>[' . $key . ']</strong> n&atilde;o foi definida no arquivo encaminhado.'); } // Chave existe, valida valores internos else { // Retira a por&ccedil;&atilde;o se&ccedil;&atilde;o do array parseado $section = $content[$key]; switch($key) { // ----------------------- // VALIDA A SE&Ccedil;&Atilde;O [module] // ----------------------- case 'module': // Verifica se tabela existe no banco de dados if(array_key_exists('table', $section)) { if(get_value($section, 'table') != '') { if(!$this-&gt;db-&gt;table_exists(get_value($section, 'table'))) { $return[$key]['table']['error'] = lang('<strong>[module] table: </strong>A tabela ') . get_value($section, 'table') . lang(' parece n&atilde;o existir no banco de dados.'); } else if(!$this-&gt;_analyze_table(get_value($section, 'table'))) { $return[$key]['table']['error'] = lang('<strong>[module] table: </strong>A tabela ') . get_value($section, 'table') . lang(' parece n&atilde;o possuir uma &uacute;nica chave prim&aacute;ria (PK) com <strong>AUTO INCREMENT</strong>.'); } } } // Verifica existencia e nome do controlador if(array_key_exists('controller', $section)) { if(get_value($section, 'controller') == '') { $return[$key]['controller']['error'] = lang('<strong>[module] controller: </strong>N&atilde;o pode ser vazio.'); } else if($this-&gt;validation-&gt;is_class_name(get_value($section, 'controller')) == false) { $return[$key]['controller']['error'] = lang('<strong>[module] controller: </strong>O valor informado para o nome do controlador deve ser um nome de classe v&aacute;lido (nome informado: ') . get_value($section, 'controller') . ').'; } else if(class_exists(get_value($section, 'controller'))) { $return[$key]['controller']['error'] = lang('<strong>[module] controller: </strong>Uma classe j&aacute; existe com o nome do controlador informado (nome: ') . get_value($section, 'controller') . ').'; } } else { $return[$key]['controller']['error'] = lang('<strong>[module] controller: </strong>Propriedade controller (se&ccedil;&atilde;o module) n&atilde;o informada no arquivo.'); } // Verifica a existencia e valor setado para r&oacute;tulo if(array_key_exists('rotule', $section)) { if(get_value($section, 'rotule') == '') { $return[$key]['rotule']['error'] = lang('<strong>[module] rotule: </strong>N&atilde;o pode ser vazio.'); } } else { $return[$key]['rotule']['error'] = lang('<strong>[module] rotule: </strong>Propriedade rotule (se&ccedil;&atilde;o module) n&atilde;o informada no arquivo.'); } // Valida numero de itens por pagina (opcional, &eacute; validado apenas caso preenchido) if(array_key_exists('items_per_page', $section)) { if(get_value($section, 'items_per_page') != '' &amp;&amp; $this-&gt;validation-&gt;is_integer_(get_value($section, 'items_per_page')) == false) { $return[$key]['items_per_page']['error'] = lang('<strong>[module] items_per_page: </strong>Deve ser um n&uacute;mero inteiro.'); } } // Valida numero de itens por pagina (opcional, &eacute; validado apenas caso preenchido) if(array_key_exists('order', $section)) { if(get_value($section, 'order') != '' &amp;&amp; $this-&gt;validation-&gt;is_integer_(get_value($section, 'order')) == false) { $return[$key]['order']['error'] = lang('<strong>[module] order: </strong>Deve ser um n&uacute;mero inteiro.'); } } else { $return[$key]['order']['error'] = lang('<strong>[module] order: </strong>Propriedade order (se&ccedil;&atilde;o module) n&atilde;o informada no arquivo.'); } break; // ------------------------------- // VALIDA A SE&Ccedil;&Atilde;O [link_to_module] // ------------------------------- case 'link_to_module': // Usar menu de acesso if(array_key_exists('use_menu', $section)) { if(strtolower(get_value($section, 'use_menu')) != 'y' &amp;&amp; strtolower(get_value($section, 'use_menu')) != 's' &amp;&amp; strtolower(get_value($section, 'use_menu')) != 'n') { $return[$key]['use_menu']['error'] = lang('<strong>[link_to_module] use_menu: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['use_menu']['error'] = lang('<strong>[link_to_module] use_menu: </strong>Propriedade use_menu (se&ccedil;&atilde;o link_to_module) n&atilde;o informada no arquivo.'); } // Usar menu de acesso if(array_key_exists('apply_groups', $section)) { if(strtolower(get_value($section, 'apply_groups')) != '') { // Divide a lista de grupos $groups = trim(trim(get_value($section, 'apply_groups')), ','); $arr_groups = array(); $arr_groups = explode(',', $groups); // Variavel de teste de grupos que falharam $groups_fail = ''; // Verifica a existencia dos grupos informados if(count($arr_groups) &gt; 0) { foreach($arr_groups as $group) { $query = $this-&gt;db-&gt;get_where('acm_user_group', array('name' =&gt; trim($group))); $groups_fail .= ($query-&gt;num_rows() &lt;= 0) ? $group . ', ' : ''; } } if($groups_fail != '') { // Escapa grupos $groups_fail = trim(trim($groups_fail), ','); $return[$key]['apply_groups']['error'] = lang('<strong>[link_to_module] apply_groups: </strong>Grupos n&atilde;o encontrados no banco de dados') . ' (' . $groups_fail . ').'; } } } else { $return[$key]['use_menu']['error'] = lang('<strong>[link_to_module] use_menu: </strong>Propriedade use_menu (se&ccedil;&atilde;o link_to_module) n&atilde;o informada no arquivo.'); } break; // ---------------------- // VALIDA A SE&Ccedil;&Atilde;O [forms] // ---------------------- case 'forms': // Formulario de insercao if(array_key_exists('insert', $section)) { if(strtolower(get_value($section, 'insert')) != 'y' &amp;&amp; strtolower(get_value($section, 'insert')) != 's' &amp;&amp; strtolower(get_value($section, 'insert')) != 'n') { $return[$key]['insert']['error'] = lang('<strong>[forms] insert: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['insert']['error'] = lang('<strong>[forms] insert: </strong>Propriedade insert (se&ccedil;&atilde;o forms) n&atilde;o informada no arquivo.'); } // Formulario de edicao if(array_key_exists('update', $section)) { if(strtolower(get_value($section, 'update')) != 'y' &amp;&amp; strtolower(get_value($section, 'update')) != 's' &amp;&amp; strtolower(get_value($section, 'update')) != 'n') { $return[$key]['update']['error'] = lang('<strong>[forms] update: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['update']['error'] = lang('<strong>[forms] update: </strong>Propriedade update (se&ccedil;&atilde;o forms) n&atilde;o informada no arquivo.'); } // Formulario de delecao if(array_key_exists('delete', $section)) { if(strtolower(get_value($section, 'delete')) != 'y' &amp;&amp; strtolower(get_value($section, 'delete')) != 's' &amp;&amp; strtolower(get_value($section, 'delete')) != 'n') { $return[$key]['delete']['error'] = lang('<strong>[forms] delete: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['delete']['error'] = lang('<strong>[forms] delete: </strong>Propriedade delete (se&ccedil;&atilde;o forms) n&atilde;o informada no arquivo.'); } // Formulario de visualizacao if(array_key_exists('view', $section)) { if(strtolower(get_value($section, 'view')) != 'y' &amp;&amp; strtolower(get_value($section, 'view')) != 's' &amp;&amp; strtolower(get_value($section, 'view')) != 'n') { $return[$key]['view']['error'] = lang('<strong>[forms] view: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['view']['error'] = lang('<strong>[forms] view: </strong>Propriedade view (se&ccedil;&atilde;o forms) n&atilde;o informada no arquivo.'); } break; // ---------------------------- // VALIDA A SE&Ccedil;&Atilde;O [permissions] // ---------------------------- case 'permissions': // Permissao de insercao if(array_key_exists('insert', $section)) { if(strtolower(get_value($section, 'insert')) != 'y' &amp;&amp; strtolower(get_value($section, 'insert')) != 's' &amp;&amp; strtolower(get_value($section, 'insert')) != 'n') { $return[$key]['insert']['error'] = lang('<strong>[permissions] insert: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['insert']['error'] = lang('<strong>[permissions] insert: </strong>Propriedade insert (se&ccedil;&atilde;o permissions) n&atilde;o informada no arquivo.'); } // Permissao de edicao if(array_key_exists('update', $section)) { if(strtolower(get_value($section, 'update')) != 'y' &amp;&amp; strtolower(get_value($section, 'update')) != 's' &amp;&amp; strtolower(get_value($section, 'update')) != 'n') { $return[$key]['update']['error'] = lang('<strong>[permissions] update: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['update']['error'] = lang('<strong>[permissions] update: </strong>Propriedade update (se&ccedil;&atilde;o permissions) n&atilde;o informada no arquivo.'); } // Permissao de delecao if(array_key_exists('delete', $section)) { if(strtolower(get_value($section, 'delete')) != 'y' &amp;&amp; strtolower(get_value($section, 'delete')) != 's' &amp;&amp; strtolower(get_value($section, 'delete')) != 'n') { $return[$key]['delete']['error'] = lang('<strong>[permissions] delete: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['delete']['error'] = lang('<strong>[permissions] delete: </strong>Propriedade delete (se&ccedil;&atilde;o permissions) n&atilde;o informada no arquivo.'); } // Permissao de visualizacao if(array_key_exists('view', $section)) { if(strtolower(get_value($section, 'view')) != 'y' &amp;&amp; strtolower(get_value($section, 'view')) != 's' &amp;&amp; strtolower(get_value($section, 'view')) != 'n') { $return[$key]['view']['error'] = lang('<strong>[permissions] view: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['view']['error'] = lang('<strong>[permissions] view: </strong>Propriedade view (se&ccedil;&atilde;o permissions) n&atilde;o informada no arquivo.'); } // Permissao de entrada do modulo if(array_key_exists('enter', $section)) { if(strtolower(get_value($section, 'enter')) != 'y' &amp;&amp; strtolower(get_value($section, 'enter')) != 's' &amp;&amp; strtolower(get_value($section, 'enter')) != 'n') { $return[$key]['enter']['error'] = lang('<strong>[permissions] enter: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['enter']['error'] = lang('<strong>[permissions] enter: </strong>Propriedade enter (se&ccedil;&atilde;o permissions) n&atilde;o informada no arquivo.'); } break; // --------------------------------------------------- // VALIDA A SE&Ccedil;&Atilde;O [actions] (s&atilde;o opcionais os valores) // --------------------------------------------------- case 'actions': // A&ccedil;&atilde;o de edi&ccedil;&atilde;o if(array_key_exists('update', $section)) { if(strtolower(get_value($section, 'update')) != 'y' &amp;&amp; strtolower(get_value($section, 'update')) != 's' &amp;&amp; strtolower(get_value($section, 'update')) != 'n') { $return[$key]['update']['error'] = lang('<strong>[actions] update: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['update']['error'] = lang('<strong>[actions] update: </strong>Propriedade update (se&ccedil;&atilde;o actions) n&atilde;o informada no arquivo.'); } // A&ccedil;&atilde;o de dele&ccedil;&atilde;o if(array_key_exists('delete', $section)) { if(strtolower(get_value($section, 'delete')) != 'y' &amp;&amp; strtolower(get_value($section, 'delete')) != 's' &amp;&amp; strtolower(get_value($section, 'delete')) != 'n') { $return[$key]['delete']['error'] = lang('<strong>[actions] delete: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['delete']['error'] = lang('<strong>[actions] delete: </strong>Propriedade delete (se&ccedil;&atilde;o actions) n&atilde;o informada no arquivo.'); } // A&ccedil;&atilde;o de visualiza&ccedil;&atilde;o if(array_key_exists('view', $section)) { if(strtolower(get_value($section, 'view')) != 'y' &amp;&amp; strtolower(get_value($section, 'view')) != 's' &amp;&amp; strtolower(get_value($section, 'view')) != 'n') { $return[$key]['view']['error'] = lang('<strong>[actions] view: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['view']['error'] = lang('<strong>[actions] view: </strong>Propriedade view (se&ccedil;&atilde;o actions) n&atilde;o informada no arquivo.'); } break; // ------------------------------------------------- // VALIDA A SE&Ccedil;&Atilde;O [menus] (s&atilde;o opcionais os valores) // ------------------------------------------------- case 'menus': // A&ccedil;&atilde;o de edi&ccedil;&atilde;o if(array_key_exists('insert', $section)) { if(strtolower(get_value($section, 'insert')) != 'y' &amp;&amp; strtolower(get_value($section, 'insert')) != 's' &amp;&amp; strtolower(get_value($section, 'insert')) != 'n') { $return[$key]['insert']['error'] = lang('<strong>[menus] insert: </strong>Deve conter um valor v&aacute;lido (y, s ou n).'); } } else { $return[$key]['insert']['error'] = lang('<strong>[menus] insert: </strong>Propriedade insert (se&ccedil;&atilde;o menus) n&atilde;o informada no arquivo.'); } break; default: break; } } } // Prossegue com valida&ccedil;&otilde;es (AGORA PARA SE&Ccedil;&Otilde;ES CUSTOM) if(count($content) &gt; 0) { // echo 'pararat'; // Procura por se&ccedil;&otilde;es foreach($content as $key =&gt; $value) { // Cata todas as ocorrencias de menus customizados if(preg_match_all('/^custom_menu[\s]*[:][\w\d\s]*/i', $key, $matches)) { foreach($matches[0] as $pos =&gt; $key_menu) { $menu = get_value($content, $key_menu); // Valida r&oacute;tulo if(array_key_exists('rotule', $menu)) { if(get_value($menu, 'rotule') == '') { $return[$key_menu]['rotule']['error'] = '<strong>[' . $key_menu . '] rotule: </strong>' . lang('N&atilde;o pode ser vazio.'); } } else { $return[$key_menu]['rotule']['error'] = '<strong>[' . $key_menu . '] rotule: </strong>' . lang('Propriedade rotule (se&ccedil;&atilde;o de menu customizado) n&atilde;o informada no arquivo.'); } // Valida link if(array_key_exists('link', $menu)) { if(get_value($menu, 'link') == '') { $return[$key_menu]['link']['error'] = '<strong>[' . $key_menu . '] link: </strong>' . lang('N&atilde;o pode ser vazio.'); } } else { $return[$key_menu]['link']['error'] = '<strong>[' . $key_menu . '] link: </strong>' . lang('Propriedade link (se&ccedil;&atilde;o de menu customizado) n&atilde;o informada no arquivo.'); } } } // Cata todas as ocorrencias de action customizados if(preg_match_all('/^custom_action[\s]*[:][\w\d\s]*/i', $key, $matches)) { foreach($matches[0] as $pos =&gt; $key_action) { $action = get_value($content, $key_action); // Valida r&oacute;tulo if(array_key_exists('rotule', $action)) { if(get_value($action, 'rotule') == '') { $return[$key_action]['rotule']['error'] = '<strong>[' . $key_action . '] rotule: </strong>' . lang('N&atilde;o pode ser vazio.'); } } else { $return[$key_action]['rotule']['error'] = '<strong>[' . $key_action . '] rotule: </strong>' . lang('Propriedade rotule (se&ccedil;&atilde;o de action customizado) n&atilde;o informada no arquivo.'); } // Valida link if(array_key_exists('link', $action)) { if(get_value($action, 'link') == '') { $return[$key_action]['link']['error'] = '<strong>[' . $key_action . '] link: </strong>' . lang('N&atilde;o pode ser vazio.'); } } else { $return[$key_action]['link']['error'] = '<strong>[' . $key_action . '] link: </strong>' . lang('Propriedade link (se&ccedil;&atilde;o de action customizado) n&atilde;o informada no arquivo.'); } } } // Cata todas as ocorrencias de permissions customizados if(preg_match_all('/^custom_permission[\s]*[:][\w\d\s]*/i', $key, $matches)) { foreach($matches[0] as $pos =&gt; $key_permission) { $permission = get_value($content, $key_permission); // Valida r&oacute;tulo if(array_key_exists('rotule', $permission)) { if(get_value($permission, 'rotule') == '') { $return[$key_permission]['rotule']['error'] = '<strong>' . $key_permission . ': </strong>' . lang('N&atilde;o pode ser vazio.'); } } else { $return[$key_permission]['rotule']['error'] = '<strong>' . $key_permission . ': </strong>' . lang('Propriedade rotule (se&ccedil;&atilde;o de permission customizado) n&atilde;o informada no arquivo.'); } // Valida nome da permissao if(array_key_exists('permission_name', $permission)) { if(get_value($permission, 'permission_name') == '') { $return[$key_permission]['permission_name']['error'] = '<strong>[' . $key_permission . '] permission_name: </strong>' . lang('N&atilde;o pode ser vazio.'); } else if(preg_match('/^[a-zA-Z0-9_.]+$/', get_value($permission, 'permission_name')) == false) { $return[$key_permission]['permission_name']['error'] = '<strong>[' . $key_permission . '] permission_name: </strong>' . lang('Deve conter apenas letras, n&uacute;meros e underscore \'_\'.'); } } else { $return[$key_permission]['permission_name']['error'] = '<strong>[' . $key_permission . '] permission_name: </strong>' . lang('Propriedade permission_name (se&ccedil;&atilde;o de permission customizado) n&atilde;o informada no arquivo.'); } } } } } } else { $this-&gt;error-&gt;show_exception_page(lang('Arquivo') . ' <strong>' . $file_name . '</strong> ' . lang('cont&eacute;m erros em seu formato. Verifique o conte&uacute;do do arquivo e tente novamente. Caso persistam os problemas, leia sobre a formata&ccedil;&atilde;o de arquivos <strong>.ini</strong>.')); } // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Retorno ajustado return $return; } /** * _analyze_module_file_xml() * Analisa o arquivo de nome encaminhado tendo como base o m&eacute;todo de valida&ccedil;&atilde;o de arquivos de * extens&atilde;o .xml. Verifica tags obrigat&oacute;rias e seu conteudo, retornando array contendo erros * ou true, caso arquivo seja v&aacute;lido. * @param string file_name * @return mixed status/array */ public function _analyze_module_file_xml($file_name = '') { // Inicializa Vari&aacute;vel de erro/retorno $return = array(); try { // Seta mapeamento de erros internos e em seguida Analisa o // arquivo (verifica tags obrigat&oacute;rias e seu conteudo) libxml_use_internal_errors(true); $xml = @new SimpleXMLElement(file_get_contents($file_name)); // TABLE if($xml-&gt;table != '') { if(!$this-&gt;db-&gt;table_exists($xml-&gt;table)) { $return['table'] = lang('<strong>Dados do m&oacute;dulo:</strong> a tabela informada no nodo </database>
<table></table>
<database><strong></strong> n&atilde;o existe no banco de dados') . ' (' . $xml-&gt;table . ').'; } else if(!$this-&gt;_analyze_table($xml-&gt;table)) { $return['table'] = lang('<strong>Dados do m&oacute;dulo:</strong> a tabela informada no nodo </database>
<table></table>
<database><strong></strong> n&atilde;o possui uma &uacute;nica chave prim&aacute;ria (PK) com <strong>AUTO INCREMENT</strong>') . ' (' . $xml-&gt;table . ').'; } } // CONTROLLER if($xml-&gt;controller == '') { $return['controller'] = lang('<strong>Dados do m&oacute;dulo:</strong> nodo <strong><controller></controller></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio.'); } else if($this-&gt;validation-&gt;is_class_name($xml-&gt;controller) == false) { $return['controller'] = lang('<strong>Dados do m&oacute;dulo:</strong> nodo <strong><controller></controller></strong> deve conter um nome de classe v&aacute;lido') . ' (' . $xml-&gt;controller . ').'; } else if(class_exists($xml-&gt;controller)) { $return['controller'] = lang('<strong>Dados do m&oacute;dulo:</strong> j&aacute; existe um controlador com o nome informado no nodo <strong><controller></controller></strong>') . ' (' . $xml-&gt;controller . ').'; } // ROTULE if($xml-&gt;rotule == '') { $return['rotule'] = lang('<strong>Dados do m&oacute;dulo:</strong> nodo <strong><rotule></rotule></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio.'); } // ITEMS_PER_PAGE if($xml-&gt;items_per_page != '' &amp;&amp; $this-&gt;validation-&gt;is_integer_($xml-&gt;items_per_page) == false) { $return['items_per_page'] = lang('<strong>Dados do m&oacute;dulo:</strong> nodo <strong>&lt;items_per_page&gt;</strong> caso informado deve conter um valor num&eacute;rico.'); } // MENU DE ACESSO AO MODULO if(strtolower($xml-&gt;menu_access-&gt;create_menu) != 'true' &amp;&amp; strtolower($xml-&gt;menu_access-&gt;create_menu) != 'false') { $return['menu_access']['create_menu'] = lang('<strong>Menu de acesso ao m&oacute;dulo:</strong> nodo <strong>&lt;create_menu&gt;</strong> n&atilde;o est&aacute; presente ou o valor informado &eacute; diferente de true/false.'); } // MENU DE ACESSO AO MODULO: APLICAR PARA GRUPOS (utilizar @ pois o nodo pode n&atilde;o existir) // QUANDO &Eacute; SUB-NODO TEM DE FAZER CONVERS&Atilde;O PARA STRING, POIS SE TESTAR COM != null o objeto PAI PREVALECE if((string) $xml-&gt;menu_access-&gt;apply_to_groups != '') { if($xml-&gt;menu_access-&gt;apply_to_groups-&gt;group-&gt;count() &gt; 0) { // Variavel de teste de grupos que falharam $groups_fail = ''; // Verifica a existencia dos grupos informados (palavra de grupo reservado: none foreach($xml-&gt;menu_access-&gt;apply_to_groups-&gt;children() as $idx =&gt; $group) { $query = $this-&gt;db-&gt;get_where('acm_user_group', "name LIKE '" . $this-&gt;db-&gt;escape_like_str(trim($group)) . "'"); $groups_fail .= ($query-&gt;num_rows() &lt;= 0) ? $group . ', ' : ''; } // Grupos inexistentes no banco $groups_fail = trim(trim($groups_fail), ','); if($groups_fail != '') { $return['menu_access']['apply_to_groups'] = lang('<strong>Menu de acesso ao m&oacute;dulo:</strong> nodo <strong>&lt;apply_to_groups&gt;</strong> cont&eacute;m grupos informados inexistentes') . ' (Grupo(s): ' . $groups_fail . ').'; } } } // FORMUL&Aacute;RIOS (utilizar @ pois o nodo pode n&atilde;o existir) if($xml-&gt;forms != null) { if(@$xml-&gt;forms-&gt;children()-&gt;count() &gt; 0) { $arr_forms = array('insert', 'update', 'delete', 'view'); foreach($arr_forms as $form) { if(strtolower($xml-&gt;forms-&gt;{$form}) != 'true' &amp;&amp; strtolower($xml-&gt;forms-&gt;{$form}) != 'false') { $return['forms'][$form] = lang("<strong>Formul&aacute;rios:</strong> nodo <strong>&lt;$form&gt;</strong> n&atilde;o est&aacute; presente ou o valor informado &eacute; diferente de true/false."); } } } else { $return['forms'] = lang('<strong>Formul&aacute;rios:</strong> nodo <strong><forms></forms></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio.'); } } // PERMISS&Otilde;ES if($xml-&gt;permissions-&gt;permission != null) { if(@$xml-&gt;permissions-&gt;permission-&gt;count() &gt; 0) { $count = $xml-&gt;permissions-&gt;permission-&gt;count(); for($i = 0; $i &lt; $count; $i++) { // Name da permiss&atilde;o if($xml-&gt;permissions-&gt;permission[$i]-&gt;name == '' ) { $return['permissions']['name'][$i] = lang("<strong>Permiss&otilde;es:</strong> nodo <strong><name></name></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } else if(preg_match('/^[a-zA-Z0-9_.]+$/', $xml-&gt;permissions-&gt;permission[$i]-&gt;name) == false) { $return['permissions']['name'][$i] = lang("<strong>Permiss&otilde;es:</strong> nodo <strong><name></name></strong> valor informado deve conter apenas letras, n&uacute;meros, ponto e caracter underscore '_'."); } // R&oacute;tulo da permiss&atilde;o if($xml-&gt;permissions-&gt;permission[$i]-&gt;rotule == '' ) { $return['permissions']['rotule'][$i] = lang("<strong>Permiss&otilde;es:</strong> nodo <strong><rotule></rotule></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } // Descri&ccedil;&atilde;o da permiss&atilde;o if($xml-&gt;permissions-&gt;permission[$i]-&gt;description == '' ) { $return['permissions']['description'][$i] = lang("<strong>Permiss&otilde;es:</strong> nodo <strong><description></description></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } } } } // ACTIONS if($xml-&gt;actions-&gt;action != null) { if(@$xml-&gt;actions-&gt;action-&gt;count() &gt; 0) { $count = $xml-&gt;actions-&gt;action-&gt;count(); for($i = 0; $i &lt; $count; $i++) { // R&oacute;tulo do action if($xml-&gt;actions-&gt;action[$i]-&gt;rotule == '' ) { $return['actions']['rotule'][$i] = lang("<strong>A&ccedil;&otilde;es de registro de m&oacute;dulo:</strong> nodo <strong><rotule></rotule></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } // Description do action if($xml-&gt;actions-&gt;action[$i]-&gt;description == '' ) { $return['actions']['description'][$i] = lang("<strong>A&ccedil;&otilde;es de registro de m&oacute;dulo:</strong> nodo <strong><description></description></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } // Link do action if($xml-&gt;actions-&gt;action[$i]-&gt;link == '' ) { $return['actions']['link'][$i] = lang("<strong>A&ccedil;&otilde;es de registro de m&oacute;dulo:</strong> nodo <strong></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } } } } // MENUS if($xml-&gt;menus-&gt;menu != null) { if($xml-&gt;menus-&gt;menu-&gt;count() &gt; 0) { $count = $xml-&gt;menus-&gt;menu-&gt;count(); for($i = 0; $i &lt; $count; $i++) { // R&oacute;tulo do menu if($xml-&gt;menus-&gt;menu[$i]-&gt;rotule == '' ) { $return['menus']['rotule'][$i] = lang("<strong>Menus do m&oacute;dulo:</strong> nodo <strong><rotule></rotule></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } // Description do menu if($xml-&gt;menus-&gt;menu[$i]-&gt;description == '' ) { $return['menus']['description'][$i] = lang("<strong>Menus do m&oacute;dulo:</strong> nodo <strong><description></description></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } // Link do menu if($xml-&gt;menus-&gt;menu[$i]-&gt;link == '' ) { $return['menus']['link'][$i] = lang("<strong>Menus do m&oacute;dulo:</strong> nodo <strong></strong> n&atilde;o est&aacute; presente ou seu conte&uacute;do est&aacute; vazio."); } } } } // DEBUG: // print_r($return); } catch(Exception $e) { // Varre erros de estrutura mapeados no arquivo $msg = ''; foreach(libxml_get_errors() as $error) { $msg .= "<br />" . $error-&gt;message; } $this-&gt;error-&gt;show_exception_page(lang('Arquivo') . ' <strong>' . $file_name . '</strong> ' . lang('cont&eacute;m erros em seu formato. Verifique o conte&uacute;do do arquivo e tente novamente. Caso persistam os problemas, leia sobre a formata&ccedil;&atilde;o de arquivos <strong>.xml</strong>.<br /><br /><strong>Detalhes do problema:</strong> ') . $msg, URL_ROOT . '/acme_maker/new_module/' . basename($file_name)); } // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Retorno ajustado return $return; } /** * _analyze_table() * Analisa uma tabela de nome encaminhado, validando se ela est&aacute; de acordo com as regras * necess&aacute;rias de constru&ccedil;&atilde;o de um m&oacute;dulo. Retorna true caso a tabela seja valida, caso * contr&aacute;rio retorna false. Estas regras s&atilde;o: * -&gt; tabela s&oacute; pode conter uma &uacute;nica coluna como sendo chave prim&aacute;ria. * @param string table * @return boolean status */ public function _analyze_table($table = '') { $return = false; if($this-&gt;db-&gt;table_exists($table)) { $fields = $this-&gt;db-&gt;field_data($table); $count_pks = 0; foreach ($fields as $field) { if($field-&gt;primary_key == 1) { $count_pks++; } } $return = ($count_pks &gt; 1 || $count_pks &lt; 1) ? false : true; } return $return; } /** * _process_module_file() * Processa o arquivo de configura&ccedil;&atilde;o encaminhado, retornando um array pronto para ser * 'inserido' no banco de dados. Deve ser utilizado ap&oacute;s a valida&ccedil;&atilde;o atrav&eacute;s do m&eacute;todo * _analyze_module_file. Leva em considera&ccedil;&atilde;o o m&eacute;todo atual de processamento de arquivo. * @param string file_name * @return array data */ public function _process_module_file($file_name = '') { switch(strtolower($this-&gt;file_method_process)) { case 'ini': return $this-&gt;_process_module_file_ini($file_name); break; case 'xml': default: return $this-&gt;_process_module_file_xml($file_name); break; } } /** * _process_module_file_ini() * Processa o arquivo de configura&ccedil;&atilde;o encaminhado com base em layout de arquivos em formato .ini * @param string file_name * @return array data */ public function _process_module_file_ini($file_name = '') { // Inicializa Vari&aacute;vel de erro/retorno $return = array(); // Abre o arquivo, le e parse no conteudo $file = file_get_contents($file_name); $content = parse_ini_string($file, true); // Dados do m&oacute;dulo $return['module']['table'] = get_value(get_value($content, 'module'), 'table'); $return['module']['controller'] = get_value(get_value($content, 'module'), 'controller'); $return['module']['rotule'] = get_value(get_value($content, 'module'), 'rotule'); $return['module']['sql_list'] = get_value(get_value($content, 'module'), 'sql_list'); $return['module']['items_per_page'] = get_value(get_value($content, 'module'), 'items_per_page'); $return['module']['url_img'] = get_value(get_value($content, 'module'), 'url_img'); $return['module']['description'] = get_value(get_value($content, 'module'), 'description'); // Dados de link para o modulo $return['link_to_module']['use_menu'] = get_value(get_value($content, 'link_to_module'), 'use_menu'); $return['link_to_module']['apply_groups'] = get_value(get_value($content, 'link_to_module'), 'apply_groups'); // Dados de formularios $return['forms']['insert'] = get_value(get_value($content, 'forms'), 'insert'); $return['forms']['update'] = get_value(get_value($content, 'forms'), 'update'); $return['forms']['delete'] = get_value(get_value($content, 'forms'), 'delete'); $return['forms']['view'] = get_value(get_value($content, 'forms'), 'view'); // Dados de permiss&otilde;es $return['permissions']['insert'] = get_value(get_value($content, 'permissions'), 'insert'); $return['permissions']['update'] = get_value(get_value($content, 'permissions'), 'update'); $return['permissions']['delete'] = get_value(get_value($content, 'permissions'), 'delete'); $return['permissions']['view'] = get_value(get_value($content, 'permissions'), 'view'); $return['permissions']['enter'] = get_value(get_value($content, 'permissions'), 'enter'); $return['permissions']['custom'] = array(); // Dados de a&ccedil;&otilde;es $return['actions']['update'] = get_value(get_value($content, 'actions'), 'update'); $return['actions']['delete'] = get_value(get_value($content, 'actions'), 'delete'); $return['actions']['view'] = get_value(get_value($content, 'actions'), 'view'); $return['actions']['custom'] = array(); // Dados de menus $return['menus']['insert'] = get_value(get_value($content, 'menus'), 'insert'); $return['menus']['custom'] = array(); // Customizados (actions, menus e permissions) foreach($content as $key =&gt; $value) { // Menus customizados if(preg_match_all('/^custom_menu[\s]*[:][\w\d\s]*/i', $key, $matches)) { foreach($matches[0] as $pos =&gt; $key_menu) { $return['menus']['custom'][$key_menu] = get_value($content, $key_menu); } } // Actions customizados if(preg_match_all('/^custom_action[\s]*[:][\w\d\s]*/i', $key, $matches)) { foreach($matches[0] as $pos =&gt; $key_action) { $return['actions']['custom'][$key_action] = get_value($content, $key_action); } } // Permissions customizados if(preg_match_all('/^custom_permission[\s]*[:][\w\d\s]*/i', $key, $matches)) { foreach($matches[0] as $pos =&gt; $key_permission) { $return['permissions']['custom'][$key_permission] = get_value($content, $key_permission); } } } return $return; } /** * _process_module_file_xml() * Processa o arquivo de configura&ccedil;&atilde;o encaminhado com base em layout de arquivos em formato .xml * @param string file_name * @return array data */ public function _process_module_file_xml($file_name = '') { // Inicializa Vari&aacute;vel de erro/retorno $return = array(); $xml = @new SimpleXMLElement(file_get_contents($file_name)); // DADOS DO M&Oacute;DULO $return['table'] = (string) $xml-&gt;table; $return['controller'] = (string) $xml-&gt;controller; $return['rotule'] = (string) $xml-&gt;rotule; $return['description'] = (string) $xml-&gt;description; $return['sql_list'] = (string) $xml-&gt;sql_list; $return['items_per_page'] = (string) $xml-&gt;items_per_page; $return['url_img'] = (string) $xml-&gt;url_img; // MENU DE ACESSO AO MODULO $return['menu_access']['create_menu'] = (string) $xml-&gt;menu_access-&gt;create_menu; $return['menu_access']['apply_to_groups'] = ((string) $xml-&gt;menu_access-&gt;apply_to_groups != '') ? $xml-&gt;menu_access-&gt;apply_to_groups-&gt;children() : array(); // FORMUL&Aacute;RIOS $arr_forms = array('insert', 'update', 'delete', 'view'); foreach($arr_forms as $form) { $return['forms'][$form] = (string) $xml-&gt;forms-&gt;{$form}; } // PERMISS&Otilde;ES $return['permissions'] = array(); if($xml-&gt;permissions-&gt;permission != null) { if(@$xml-&gt;permissions-&gt;permission-&gt;count() &gt; 0) { $count = $xml-&gt;permissions-&gt;permission-&gt;count(); for($i = 0; $i &lt; $count; $i++) { $return['permissions'][$i]['name'] = (string) $xml-&gt;permissions-&gt;permission[$i]-&gt;name; $return['permissions'][$i]['rotule'] = (string) $xml-&gt;permissions-&gt;permission[$i]-&gt;rotule; $return['permissions'][$i]['description'] = (string) $xml-&gt;permissions-&gt;permission[$i]-&gt;description; } } } // ACTIONS $return['actions'] = array(); if($xml-&gt;actions-&gt;action != null) { if(@$xml-&gt;actions-&gt;action-&gt;count() &gt; 0) { $count = $xml-&gt;actions-&gt;action-&gt;count(); for($i = 0; $i &lt; $count; $i++) { $return['actions'][$i]['link'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;link; $return['actions'][$i]['rotule'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;rotule; $return['actions'][$i]['description'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;description; $return['actions'][$i]['target'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;target; $return['actions'][$i]['javascript'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;javascript; $return['actions'][$i]['url_img'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;url_img; $return['actions'][$i]['order'] = (string) $xml-&gt;actions-&gt;action[$i]-&gt;order; } } } // MENUS $return['menus'] = array(); if($xml-&gt;menus-&gt;menu != null) { if(@$xml-&gt;menus-&gt;menu-&gt;count() &gt; 0) { $count = $xml-&gt;menus-&gt;menu-&gt;count(); for($i = 0; $i &lt; $count; $i++) { $return['menus'][$i]['link'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;link; $return['menus'][$i]['rotule'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;rotule; $return['menus'][$i]['description'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;description; $return['menus'][$i]['target'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;target; $return['menus'][$i]['javascript'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;javascript; $return['menus'][$i]['url_img'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;url_img; $return['menus'][$i]['order'] = (string) $xml-&gt;menus-&gt;menu[$i]-&gt;order; } } } // Retorno ajustado return $return; } /** * _create_module() * Cria um m&oacute;dulo com base em um nome de arquivo de m&oacute;dulo (.ini) encaminhado. * @param string file_name * @return boolean status */ public function _create_module($file_name = '') { // Carrega camada modelo do engine // $this-&gt;load-&gt;model('acme/core/engine_model'); // Coleta dados do arquivo $content = $this-&gt;_process_module_file($file_name); $file_string = file_get_contents($file_name); // Variaveis de controle para cria&ccedil;&atilde;o de permiss&otilde;es, actions e menus autom&aacute;ticos $automatic_menus_created = array(); $automatic_actions_created = array(); $automatic_permissions_created = array(); // INICIALIZA VARIAVEIS DE ORDENA&Ccedil;&Atilde;O PARA MENUS E ACTIONS $count_order_menus = 5; $count_order_actions = 5; // Inicia bloco de transa&ccedil;&atilde;o $this-&gt;db-&gt;trans_start(); // --------------------------- // INSER&Ccedil;&Atilde;O DE DADOS DO M&Oacute;DULO // --------------------------- // Insere dados do m&oacute;dulo $module['ini_file'] = $file_string; $module['table'] = get_value($content, 'table'); $module['controller'] = get_value($content, 'controller'); $module['lang_key_rotule'] = get_value($content, 'rotule'); $module['sql_list'] = get_value($content, 'sql_list'); $module['items_per_page'] = (get_value($content, 'items_per_page') == '') ? 100 : get_value($content, 'items_per_page'); $module['url_img'] = get_value($content, 'url_img'); $module['description'] = get_value($content, 'description'); foreach($module as $column =&gt; $value) { if($value == '') { $escape = false; $value = 'NULL'; } else { $escape = true; } $this-&gt;db-&gt;set($column, $value, $escape); } // Faz o insert e coleta o id inserido $this-&gt;db-&gt;insert('acm_module'); $id_module = $this-&gt;db-&gt;insert_id(); // ---------------------------- // PERMISS&Atilde;O DE ENTRADA (ENTER) // ---------------------------- $permission['id_module'] = $id_module; $permission['lang_key_rotule'] = 'Permiss&atilde;o de entrada do m&oacute;dulo'; $permission['description'] = 'Esta permiss&atilde;o &eacute; testada quando este m&oacute;dulo &eacute; acessado.'; $permission['permission'] = 'enter'; $this-&gt;db-&gt;insert('acm_module_permission', $permission); $automatic_permissions_created[] = 'enter'; // --------------------------- // MENU DE ACESSO AO M&Oacute;DULO // --------------------------- if(strtolower(get_value($content['menu_access'], 'create_menu')) == 'true') { // Menu recebe o nome do modulo $menu_access['lang_key_rotule'] = get_value($content, 'rotule'); $menu_access['link'] = '<acme eval="URL_ROOT"></acme>/' . get_value($content, 'controller'); // Faz insert de menu para cada grupo informado // Divide a lista de grupos foreach(get_value($content['menu_access'], 'apply_to_groups') as $group) { $query = $this-&gt;db-&gt;get_where('acm_user_group', "name LIKE '$group'"); $data = $query-&gt;row(); $menu_access['id_user_group'] = $data-&gt;id_user_group; // Faz o insert para o grupo atual $this-&gt;db-&gt;insert('acm_menu', $menu_access); } } // ---------------------------------------------------------- // INSER&Ccedil;&Atilde;O DE FORMUL&Aacute;RIOS (somente se tabela estiver setada) // ---------------------------------------------------------- if(get_value($content, 'table') != '') { // Verifica se algum formul&aacute;rio dever&aacute; ser preenchido para coletar dados // dos campos da tabela (e rodar somente uma vez a consulta) if(strtolower(get_value($content['forms'], 'insert')) == 'true' || strtolower(get_value($content['forms'], 'update')) == 'true' || strtolower(get_value($content['forms'], 'delete')) == 'true' || strtolower(get_value($content['forms'], 'view')) == 'true') { $fields = $this-&gt;db-&gt;field_data(get_value($content, 'table')); foreach ($fields as $field) $form_fields[] = $this-&gt;form-&gt;build_array_field_db_from_object($field, get_value($content, 'table')); } // INSER&Ccedil;&Atilde;O, UPDATE, DELETE, VIEW (array contendo booleanos de configuracao // de cria&ccedil;&atilde;o autom&aacute;tica de registros extras para cada tipo de opera&ccedil;&atilde;o) $arr_forms[] = array('name' =&gt; 'insert', 'rotule' =&gt;'Inser&ccedil;&atilde;o', 'create_automatic_menu' =&gt; true, 'create_automatic_action' =&gt; false, 'create_automatic_permission' =&gt; true, ); $arr_forms[] = array('name' =&gt; 'update', 'rotule' =&gt;'Edi&ccedil;&atilde;o', 'create_automatic_menu' =&gt; false, 'create_automatic_action' =&gt; true, 'create_automatic_permission' =&gt; true, ); $arr_forms[] = array('name' =&gt; 'delete', 'rotule' =&gt;'Dele&ccedil;&atilde;o', 'create_automatic_menu' =&gt; false, 'create_automatic_action' =&gt; true, 'create_automatic_permission' =&gt; true, ); $arr_forms[] = array('name' =&gt; 'view', 'rotule' =&gt;'Visualiza&ccedil;&atilde;o', 'create_automatic_menu' =&gt; false, 'create_automatic_action' =&gt; true, 'create_automatic_permission' =&gt; true, ); // PARA CADA ITEM DE FORMULARIO, CRIA O FORMULARIO E DEPENDENDO DA A&Ccedil;&Atilde;O, // CRIA TAMB&Eacute;M PERMISS&Otilde;ES, MENUS E ACTIONS for($i = 0; $i &lt; count($arr_forms); $i++) { if(get_value($content['forms'], $arr_forms[$i]['name']) == 'true') { $form['id_module'] = $id_module; $form['operation'] = $arr_forms[$i]['name']; $this-&gt;db-&gt;insert('acm_module_form', $form); // Insere campos para este formul&aacute;rio $id_form = $this-&gt;db-&gt;insert_id(); // Varre os campos, setando o id_form deles $count_fields = count($form_fields); for($f = 0; $f &lt; $count_fields; $f++) { $form_fields[$f]['id_module_form'] = $id_form; foreach($form_fields[$f] as $column_form =&gt; $value_form) { // echo $value_form . '<br />'; $escape = ($value_form == 'NULL') ? false : true; $this-&gt;db-&gt;set($column_form, $value_form, $escape); } $this-&gt;db-&gt;insert('acm_module_form_field'); } // Insert de permiss&atilde;o autom&aacute;tica if($arr_forms[$i]['create_automatic_permission']) { $permission['id_module'] = $id_module; $permission['lang_key_rotule'] = 'Permiss&atilde;o de ' . $arr_forms[$i]['rotule']; $permission['description'] = 'Esta permiss&atilde;o &eacute; testada quando a opera&ccedil;&atilde;o de ' . $arr_forms[$i]['rotule'] . ' &eacute; invocada atrav&eacute;s de uma p&aacute;gina de formul&aacute;rio.'; $permission['permission'] = $arr_forms[$i]['name']; $this-&gt;db-&gt;insert('acm_module_permission', $permission); // Seta em array de controle que a permiss&atilde;o da a&ccedil;&atilde;o atual foi criada // Isso ser&aacute; utilizado posteriormente caso uma permiss&atilde;o de mesmo nome seja // definida manualmente $automatic_permissions_created[] = $arr_forms[$i]['name']; } // Insert de a&ccedil;&atilde;o de registro autom&aacute;tica if($arr_forms[$i]['create_automatic_action']) { $action['id_module'] = $id_module; $action['lang_key_rotule'] = $arr_forms[$i]['rotule']; $action['description'] = 'Esta a&ccedil;&atilde;o de registro aponta seu link para o formul&aacute;rio de ' . $arr_forms[$i]['rotule'] . '.'; $action['link'] = '<acme eval="URL_ROOT"></acme>/' . get_value($content, 'controller') . '/form/' . $arr_forms[$i]['name'] . '/{0}'; $action['url_img'] = '<acme eval="URL_IMG"></acme>/icon_' . $arr_forms[$i]['name'] . '.png'; $action['order'] = $count_order_actions; $this-&gt;db-&gt;insert('acm_module_action', $action); // Seta em array de controle que a a&ccedil;&atilde;o da a&ccedil;&atilde;o atual foi criada, isso ser&aacute; // utilizado posteriormente caso uma permiss&atilde;o de mesmo nome seja definida // manualmente $automatic_actions_created[] = $arr_forms[$i]['name']; // Incrementa a ordena&ccedil;&atilde;o $count_order_actions += 5; } // Insert de menu autom&aacute;tico if($arr_forms[$i]['create_automatic_menu']) { $menu['id_module'] = $id_module; $menu['lang_key_rotule'] = $arr_forms[$i]['rotule']; $menu['description'] = 'Este menu aponta seu link para o formul&aacute;rio de ' . $arr_forms[$i]['rotule'] . '.'; $menu['link'] = '<acme eval="URL_ROOT"></acme>/' . get_value($content, 'controller') . '/form/' . $arr_forms[$i]['name']; $menu['url_img'] = '<acme eval="URL_IMG"></acme>/icon_' . $arr_forms[$i]['name'] . '.png'; $menu['order'] = $count_order_menus; $this-&gt;db-&gt;insert('acm_module_menu', $menu); // Seta em array de controle que a a&ccedil;&atilde;o da a&ccedil;&atilde;o atual foi criada, isso ser&aacute; // utilizado posteriormente caso uma permiss&atilde;o de mesmo nome seja definida // manualmente $automatic_menus_created[] = $arr_forms[$i]['name']; // Incrementa a ordena&ccedil;&atilde;o $count_order_menus += 5; } } } } // ---------------------- // INSER&Ccedil;&Atilde;O DE PERMISS&Otilde;ES // ---------------------- for($i = 0; $i &lt; count($content['permissions']); $i++) { if(!in_array($content['permissions'][$i]['name'], $automatic_permissions_created)) { $permission['id_module'] = $id_module; $permission['lang_key_rotule'] = $content['permissions'][$i]['rotule']; $permission['description'] = $content['permissions'][$i]['description']; $permission['permission'] = $content['permissions'][$i]['name']; $this-&gt;db-&gt;insert('acm_module_permission', $permission); // Adiciona permiss&atilde;o atual, para que n&atilde;o seja re-inserida $automatic_permissions_created[] = $content['permissions'][$i]['name']; } } // ---------------------- // INSER&Ccedil;&Atilde;O DE A&Ccedil;&Otilde;ES // ---------------------- for($i = 0; $i &lt; count($content['actions']); $i++) { $action['id_module'] = $id_module; $action['lang_key_rotule'] = $content['actions'][$i]['rotule']; $action['description'] = $content['actions'][$i]['description']; $action['link'] = $content['actions'][$i]['link']; $action['target'] = $content['actions'][$i]['target']; $action['javascript'] = $content['actions'][$i]['javascript']; $action['url_img'] = $content['actions'][$i]['url_img']; $action['order'] = ($content['actions'][$i]['order'] == '') ? $count_order_actions + 5 : $content['actions'][$i]['order']; $this-&gt;db-&gt;insert('acm_module_action', $action); // Incrementa ordena&ccedil;&atilde;o $count_order_actions += 5; } // ---------------------- // INSER&Ccedil;&Atilde;O DE MENUS // ---------------------- for($i = 0; $i &lt; count($content['menus']); $i++) { $menu['id_module'] = $id_module; $menu['lang_key_rotule'] = $content['menus'][$i]['rotule']; $menu['description'] = $content['menus'][$i]['description']; $menu['link'] = $content['menus'][$i]['link']; $menu['target'] = $content['menus'][$i]['target']; $menu['javascript'] = $content['menus'][$i]['javascript']; $menu['url_img'] = $content['menus'][$i]['url_img']; $menu['order'] = ($content['menus'][$i]['order'] == '') ? $count_order_menus + 5 : $content['menus'][$i]['order']; $this-&gt;db-&gt;insert('acm_module_menu', $menu); // Incrementa ordena&ccedil;&atilde;o $count_order_menus += 5; } // ----------------------------- // CRIA&Ccedil;&Atilde;O DE ARQUIVOS DO M&Oacute;DULO // ----------------------------- // Controlador $file_controller = file_get_contents('application/core/acme/engine_files/maker_template_controller.php'); $file_controller = str_replace('&lt;CLASS_NAME&gt;', get_value($content, 'controller'), $file_controller); $file_controller = str_replace('&lt;MODULE_DESCRIPTION&gt;', get_value($content, 'description'), $file_controller); $file_controller = str_replace('&lt;CREATION_DATE&gt;', date('d/m/Y'), $file_controller); file_put_contents('application/controllers/' . get_value($content, 'controller') . '.php', $file_controller); // Model $file_model = file_get_contents('application/core/acme/engine_files/maker_template_model.php'); $file_model = str_replace('&lt;CLASS_NAME&gt;', get_value($content, 'controller'), $file_model); $file_model = str_replace('&lt;MODULE_DESCRIPTION&gt;', get_value($content, 'description'), $file_model); $file_model = str_replace('&lt;CREATION_DATE&gt;', date('d/m/Y'), $file_model); file_put_contents('application/models/' . get_value($content, 'controller') . '_model.php', $file_model); // View @mkdir('application/views/' . TEMPLATE . '/' . get_value($content, 'controller')); // Fecha a transa&ccedil;&atilde;o $this-&gt;db-&gt;trans_complete(); return true; } /** * _get_skeleton_module_file() * Retorna o conte&uacute;do (string) do arquivo esqueleto de configura&ccedil;&atilde;o de m&oacute;dulo. Parametro * diz qual estrutura de arquivo dever&aacute; ser copiada. * @return string content_file */ public function _get_skeleton_module_file($method = '') { switch(strtolower($method)) { case 'ini': return file_get_contents('application/core/acme/engine_files/maker_template_module_file.ini'); break; case 'xml': default: return file_get_contents('application/core/acme/engine_files/maker_template_module_file.xml'); break; } } /** * _get_skeleton_custom_section() * Retorna o conte&uacute;do (string) de uma se&ccedil;&atilde;o custom de arquivo esqueleto de configura&ccedil;&atilde;o de m&oacute;dulo. * @param string section * @return string content_file */ public function _get_skeleton_custom_section($section) { $content = ''; switch(strtolower($section)) { case 'menu': case 'action': case 'permission': $content = file_get_contents('application/core/acme/engine_files/maker_template_module_file_custom_' . $section . '.ini'); break; default: break; } return $content; } // ------------------------------------------------------------------------------------------ // CONJUNTO DE FUN&Ccedil;&Otilde;ES DO MOTOR DE ACME ENGINE UTILIZADAS NO M&Oacute;DULO DE ATUALIZA&Ccedil;&Atilde;O DE APP. // ------------------------------------------------------------------------------------------ // application/controllers/acme/acme_updater =&gt; M&oacute;dulo respons&aacute;vel pela atualiza&ccedil;&atilde;o do // sistema ACME atrav&eacute;s do uso de pacotes de atualiza&ccedil;&atilde;o. O conjunto de fun&ccedil;&otilde;es abaixo // contemplam valida&ccedil;&otilde;es dos requisitos de um pacote de atualiza&ccedil;&atilde;o, verifica&ccedil;&atilde;o de integridade // e afins. Para maiores detalhes sobre a constru&ccedil;&atilde;o de pacotes de atualiza&ccedil;&atilde;o, leia a // documenta&ccedil;&atilde;o da classe. // // $this-&gt;_check_updater_permissions() // Verifica as permiss&otilde;es necess&aacute;rias para o modulo updater funcionar. // // $this-&gt;_check_updater_requirements() // Analisa os requisitos necessarios para o updater funcionar, como bibliotecas padr&atilde;o. // // $this-&gt;_analyze_package_update() // Analisa a integridade e valida um pacote de atualiza&ccedil;&atilde;o. // // $this-&gt;_process_package_update() // Processa um pacote de atualiza&ccedil;&atilde;o anteriormente verificado, retornando os dados do pacote // em formato de array, j&aacute; tratado. // // $this-&gt;_install_package_update() // Instala um pacote de nome encaminhado. Pacote deve estar verificado. Processa o pacote // no interior desta fun&ccedil;&atilde;o. // ------------------------------------------------------------------------------------------ /** * _check_updater_permissions() * Checa as permiss&otilde;es necess&aacute;rias para o updater funcionar. Retorna true caso permissions ok * ou false, caso falta de permissao. * @return boolean status */ public function _check_updater_permissions() { if(is_writable('application/uploads/acme/packages_update') === false &amp;&amp; is_readable('application/uploads/acme/packages_update') === false) { return false; } else if(is_writable('application/temp/acme') === false &amp;&amp; is_readable('application/tem/acme') === false) { return false; } else if(file_exists('application/core/acme/engine_files/updater_template_acme_version.php') === false) { return false; } else { return true; } } /** * _check_updater_requirements() * Checa os requisitos necess&aacute;rios para o updater funcionar. Retorna true caso requirements ok * ou array de mensagem de erros, caso erro. * @return mixed status/array */ public function _check_updater_requirements() { $return = array(); // Extens&atilde;o zlib if(!extension_loaded('zip')) $return['zip_extension'] = lang('Extens&atilde;o zip n&atilde;o carregada em seu PHP. Voc&ecirc; deve ativar o uso desta extens&atilde;o para que este m&oacute;dulo funcione corretamente.'); // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Retorno ajustado return $return; } /** * _analyze_package_update() * Analisa um pacote de atualiza&ccedil;&atilde;o, retornando um array de dados sobre este determinado pacote. * Verifica a integridade geral do pacote, se tags est&atilde;o presentes, atributos faltando, etc. * @param string file_name * @return mixed status/array */ public function _analyze_package_update($file_name = '') { // Inicializa Vari&aacute;vel de erro/retorno $return = array(); // Inicializa objeto de manipulacao zip $zip = new ZipArchive(); // Faz abertura do zip do pacote $zip-&gt;open($file_name); // Coleta todos os aquivos do zip for($i = 0; $i &lt; $zip-&gt;numFiles; $i++) { $stat = $zip-&gt;statIndex($i); $files[] = basename($stat['name']); } // Verifica se existe um arquivo chamado package e outro chamado hash.md5 if(!in_array('package.zip', $files) &amp;&amp; !in_array('hash.md5', $files)) { $return['bad-package'] = lang('Conte&uacute;do do pacote: arquivos faltando no conte&uacute;do total do pacote.'); } else { // Extrai o conte&uacute;do do pacote para diret&oacute;rio tempor&aacute;rio $temp_dir = 'application/temp/acme/' . uniqid(); $zip-&gt;extractTo($temp_dir); // Agora trabalha com diret&oacute;rio, n&atilde;o mais com pacote // Verifica a integridade do pacote (com base no md5 do arquivo interno) if(md5_file($temp_dir . '/package.zip') != file_get_contents($temp_dir . '/hash.md5')) { $return['bad-package'] = lang('Conte&uacute;do do pacote: pacote de atualiza&ccedil;&atilde;o corrompido.'); } else { // Abre o pacote interno, contendo o conte&uacute;do novo do pacote $package_file = $temp_dir . '/package.zip'; $zip_package = new ZipArchive(); $zip_package-&gt;open($package_file); // Coleta todos os aquivos do zip interno for($i = 0; $i &lt; $zip_package-&gt;numFiles; $i++) { $stat = $zip_package-&gt;statIndex($i); $package_files[] = basename($stat['name']); } // Verifica se existe arquivo install.xml if(!in_array('install.xml', $package_files)) { $return['bad-package'] = lang('Conte&uacute;do do pacote: install.xml n&atilde;o est&aacute; presente no interior do pacote.'); } else { // Descompacta pacote interno e analisa o install.xml $zip_package-&gt;extractTo($temp_dir . '/package'); // Seta o file path do install.xml $file_xml = $temp_dir . '/package/install.xml'; // Analisa o XML de instala&ccedil;&atilde;o try { // Seta mapeamento de erros internos e em seguida Analisa o // arquivo (verifica tags obrigat&oacute;rias e seu conteudo) libxml_use_internal_errors(true); $xml = @new SimpleXMLElement(file_get_contents($file_xml)); // CHAVE DE IDENTIFICA&Ccedil;&Atilde;O DO PACOTE // Verifica valor informado, caso n&atilde;o exista o pacote &eacute; inv&aacute;lido. // Caso valor exista, verifica se pacote j&aacute; est&aacute; instalado no sistema if($xml-&gt;{'package-version'}-&gt;count() &lt;= 0 || $xml-&gt;{'package-version'}-&gt;attributes()-&gt;value == '') $return['package-version'] = lang('Vers&atilde;o de atualiza&ccedil;&atilde;o do pacote: valor n&atilde;o informado.'); // CHAVE DE IDENTIFICA&Ccedil;&Atilde;O DO PACOTE PAI (valida somente existencia) if($xml-&gt;{'package-version-father'}-&gt;count() &lt;= 0) $return['package-version-father'] = lang('Vers&atilde;o de atualiza&ccedil;&atilde;o do pacote pai: valor n&atilde;o obrigat&oacute;rio, por&eacute;m tag n&atilde;o est&aacute; presente.'); // NOME DO PACOTE DE ATUALIZA&Ccedil;&Atilde;O if($xml-&gt;{'package-name'}-&gt;count() &lt;= 0 || $xml-&gt;{'package-name'}-&gt;attributes()-&gt;value == '') $return['package-name'] = lang('Nome do pacote: valor n&atilde;o informado.'); // DATA DE DISPONIBILIZA&Ccedil;&Atilde;O DO PACOTE if($xml-&gt;{'package-dtt-available'}-&gt;count() &lt;= 0 || $xml-&gt;{'package-dtt-available'}-&gt;attributes()-&gt;value == '') $return['package-dtt-available'] = lang('Data de disponibiliza&ccedil;&atilde;o do pacote: valor n&atilde;o informado.'); // DESCRI&Ccedil;&Atilde;O DO PACOTE DE ATUALIZA&Ccedil;&Atilde;O if($xml-&gt;{'package-description'}-&gt;count() &lt;= 0 || $xml-&gt;{'package-description'} == '') $return['package-description'] = lang('Descri&ccedil;&atilde;o do pacote: valor n&atilde;o informado.'); // A&Ccedil;&Otilde;ES DO PACOTE DE ATUALIZA&Ccedil;&Atilde;O if(count(@(array)$xml-&gt;{'package-actions'}-&gt;children()) &lt;= 0 || $xml-&gt;{'package-actions'}-&gt;count() &lt;= 0) { $return['package-actions'] = lang('A&ccedil;&otilde;es do pacote: nenhuma a&ccedil;&atilde;o presente no pacote.'); } else { // FAZ AS DEVIDAS VALIDA&Ccedil;&Otilde;ES DE A&Ccedil;&Otilde;ES (VERIFICA SE ATRIBUTOS EST&Atilde;O PRESENTES, ETC) // VALIDA&Ccedil;&Otilde;ES PARA SQL - tag <run-sql-file value="sql/example.sql"> $count_sql = count($xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}); if($count_sql &gt; 0) { // Inicializa var de controle de retorno de &iacute;ndices com problemas $arr_idxs_invalid = ''; $arr_idxs_file_not_found = ''; // Verifica todas as instru&ccedil;&otilde;es de run sql for($i = 0; $i &lt; $count_sql; $i++) { if($xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;value == '' || $xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;order == '') $arr_idxs_invalid .= $i . ', '; elseif(!file_exists($temp_dir . '/package/' . (string)$xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;value)) $arr_idxs_file_not_found .= $i . ', '; } // Verifica se existe algum &iacute;ndice com problema if($arr_idxs_invalid != '') $return['run-sql-file'] = lang('A&ccedil;&atilde;o SQL: valor ou ordem n&atilde;o informado. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_invalid, ', ')) . '.'; elseif($arr_idxs_file_not_found != '') $return['run-sql-file'] = lang('A&ccedil;&atilde;o SQL: arquivos informados n&atilde;o est&atilde;o presentes. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_file_not_found, ', ')) . '.'; } // VALIDA&Ccedil;&Otilde;ES PARA COPIA DE ARQUIVOS // tag <copy-replace-file from="somepath/example" to="application/somepath/example"> $count_copy_replace = count($xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}); if($count_copy_replace &gt; 0) { // Inicializa var de controle de retorno de &iacute;ndices com problemas $arr_idxs_invalid = ''; $arr_idxs_file_not_found = ''; // Verifica todas as instru&ccedil;&otilde;es de run copia de arquivos for($i = 0; $i &lt; $count_copy_replace; $i++) { if($xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;from == '' || $xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;to == '' || $xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;order == '') $arr_idxs_invalid .= $i . ', '; elseif(!file_exists($temp_dir . '/package/' . (string)$xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;from)) $arr_idxs_file_not_found .= $i . ', '; } // Verifica se existe algum &iacute;ndice com problema if($arr_idxs_invalid != '') $return['copy-replace-file'] = lang('C&oacute;pia de arquivos: valor FROM, TO ou ordem n&atilde;o informado. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_invalid, ', ')) . '.'; elseif($arr_idxs_file_not_found != '') $return['copy-replace-file'] = lang('C&oacute;pia de arquivos: arquivo de origem n&atilde;o encontrado no pacote. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_file_not_found, ', ')) . '.'; } // VALIDA&Ccedil;&Otilde;ES PARA CRIA&Ccedil;&Atilde;O DE DIRET&Oacute;RIOS // tag <mkdir value="somepath"></mkdir> $count_mkdir = count($xml-&gt;{'package-actions'}-&gt;{'mkdir'}); if($count_mkdir &gt; 0) { // Inicializa var de controle de retorno de &iacute;ndices com problemas $arr_idxs_invalid = ''; // Verifica todas as instru&ccedil;&otilde;es de criacao de dir for($i = 0; $i &lt; $count_mkdir; $i++) { if($xml-&gt;{'package-actions'}-&gt;{'mkdir'}[$i]-&gt;attributes()-&gt;value == '' || $xml-&gt;{'package-actions'}-&gt;{'mkdir'}[$i]-&gt;attributes()-&gt;order == '') $arr_idxs_invalid .= $i . ', '; } // Verifica se existe algum &iacute;ndice com problema if($arr_idxs_invalid != '') $return['mkdir'] = lang('Cria&ccedil;&atilde;o de diret&oacute;rios: valor ou ordem n&atilde;o informado. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_invalid, ', ')) . '.'; } // VALIDA&Ccedil;&Otilde;ES PARA REMO&Ccedil;&Atilde;O DE DIRET&Oacute;RIOS // tag <rmdir value="somepath"></rmdir> $count_rmdir = count($xml-&gt;{'package-actions'}-&gt;{'rmdir'}); if($count_rmdir &gt; 0) { // Inicializa var de controle de retorno de &iacute;ndices com problemas $arr_idxs_invalid = ''; // Verifica todas as instru&ccedil;&otilde;es de remo&ccedil;&atilde;o for($i = 0; $i &lt; $count_rmdir; $i++) { if($xml-&gt;{'package-actions'}-&gt;{'rmdir'}[$i]-&gt;attributes()-&gt;value == '' || $xml-&gt;{'package-actions'}-&gt;{'rmdir'}[$i]-&gt;attributes()-&gt;order == '') $arr_idxs_invalid .= $i . ', '; } // Verifica se existe algum &iacute;ndice com problema if($arr_idxs_invalid != '') $return['rmdir'] = lang('Remo&ccedil;&atilde;o de diret&oacute;rios: valor ou order n&atilde;o informado. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_invalid, ', ')) . '.'; } // VALIDA&Ccedil;&Otilde;ES PARA REMO&Ccedil;&Atilde;O DE ARQUIVOS // tag <unlink value="somepath"></unlink> $count_unlink = count($xml-&gt;{'package-actions'}-&gt;{'unlink'}); if($count_unlink &gt; 0) { // Inicializa var de controle de retorno de &iacute;ndices com problemas $arr_idxs_invalid = ''; // Verifica todas as instru&ccedil;&otilde;es de remo&ccedil;&atilde;o for($i = 0; $i &lt; $count_unlink; $i++) { if($xml-&gt;{'package-actions'}-&gt;{'unlink'}[$i]-&gt;attributes()-&gt;value == '' || $xml-&gt;{'package-actions'}-&gt;{'unlink'}[$i]-&gt;attributes()-&gt;order == '') $arr_idxs_invalid .= $i . ', '; } // Verifica se existe algum &iacute;ndice com problema if($arr_idxs_invalid != '') $return['unlink'] = lang('Remo&ccedil;&atilde;o de arquivos: valor ou order n&atilde;o informado. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_invalid, ', ')) . '.'; } // VALIDA&Ccedil;&Otilde;ES PARA RENAME DE ARQUIVOS // tag <rename from="somepath/example" to="application/somepath/example"> $count_rename = count($xml-&gt;{'package-actions'}-&gt;{'rename'}); if($count_rename &gt; 0) { // Inicializa var de controle de retorno de &iacute;ndices com problemas $arr_idxs_invalid = ''; $arr_idxs_file_not_found = ''; // Verifica todas as instru&ccedil;&otilde;es de run copia de arquivos for($i = 0; $i &lt; $count_rename; $i++) { if($xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;from == '' || $xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;to == '' || $xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;order == '') $arr_idxs_invalid .= $i . ', '; elseif(!file_exists((string)$xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;from)) $arr_idxs_file_not_found .= $i . ', '; } // Verifica se existe algum &iacute;ndice com problema if($arr_idxs_invalid != '') $return['rename'] = lang('Renomar arquivo/diret&oacute;rio: valor FROM, TO ou ordem n&atilde;o informado. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_invalid, ', ')) . '.'; elseif($arr_idxs_file_not_found != '') $return['rename'] = lang('Renomar arquivo/diret&oacute;rio: arquivo de origem n&atilde;o encontrado no sistema. &Iacute;ndice(s)') . ' ' . (trim($arr_idxs_file_not_found, ', ')) . '.'; } } } catch(Exception $e) { // Varre erros de estrutura mapeados no arquivo $msg = ''; foreach(libxml_get_errors() as $error) { $msg .= "<br />" . $error-&gt;message; } $this-&gt;error-&gt;show_exception_page(lang('Arquivo XML de instala&ccedil;&atilde;o de pacote cont&eacute;m erros em seu formato. Verifique o conte&uacute;do do arquivo e tente novamente. Caso persistam os problemas, leia sobre a formata&ccedil;&atilde;o de arquivos <strong>.xml</strong>.<br /><br /><strong>Detalhes do problema:</strong> ') . $msg, URL_ROOT . '/acme_updater/package_upload/'); } } // Fecha pacote interno $zip_package-&gt;close(); } // Fecha zip externo $zip-&gt;close(); // Remove o pacote externo e diret&oacute;rio tempor&aacute;rio $this-&gt;load-&gt;helper('file'); @delete_files($temp_dir, true); @rmdir($temp_dir); } // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Retorno ajustado return $return; } /** * _process_package_update() * Processa um pacote de atualiza&ccedil;&atilde;o, retornando dados deste pacote em um formato ajustado (array). * @param string file_name * @return array data */ public function _process_package_update($file_name = '') { // Inicializa Vari&aacute;vel de erro/retorno $return = array(); // Inicializa objeto de manipulacao zip $zip = new ZipArchive(); // Faz abertura do zip do pacote $zip-&gt;open($file_name); // Extrai arquivo para diret&oacute;rio tempor&aacute;rio $temp_dir = 'application/temp/acme/' . uniqid(); $zip-&gt;extractTo($temp_dir); // Abre o pacote interno, contendo o conte&uacute;do novo do pacote $package_file = $temp_dir . '/package.zip'; $zip_package = new ZipArchive(); $zip_package-&gt;open($package_file); // Descompacta pacote interno e analisa o install.xml $zip_package-&gt;extractTo($temp_dir . '/package'); // Seta o file path do install.xml $file_xml = $temp_dir . '/package/install.xml'; // Instancia xml $xml = @new SimpleXMLElement(file_get_contents($file_xml)); // version do pacote $return['package-version'] = (string)$xml-&gt;{'package-version'}-&gt;attributes()-&gt;value; // version do pai, caso exista $return['package-version-father'] = (string)$xml-&gt;{'package-version-father'}-&gt;attributes()-&gt;value; // Data de disponibilidade do pacote $return['package-dtt-available'] = (string)$xml-&gt;{'package-dtt-available'}-&gt;attributes()-&gt;value; // Nome do pacote $return['package-name'] = (string)$xml-&gt;{'package-name'}-&gt;attributes()-&gt;value; // Descri&ccedil;&atilde;o $return['package-description'] = (string)$xml-&gt;{'package-description'}; // ---------------------------- // CONJUNTO DE A&Ccedil;&Otilde;ES DO PACOTE // ---------------------------- $return['package-actions'] = array(); // A&Ccedil;&Otilde;ES DE INSTRU&Ccedil;&Otilde;ES SQL $count_sql = count($xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}); if($count_sql &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de run sql for($i = 0; $i &lt; $count_sql; $i++) { $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;order]['run-sql-file']['file'] = (string)$xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;value; $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;order]['run-sql-file']['content'] = file_get_contents($temp_dir . '/package/' . (string)$xml-&gt;{'package-actions'}-&gt;{'run-sql-file'}[$i]-&gt;attributes()-&gt;value); } } // A&Ccedil;&Otilde;ES DE C&Oacute;PIA/SUBSTITUI&Ccedil;&Atilde;O DE ARQUIVOS $count_copy_replace = count($xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}); if($count_copy_replace &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de copia de arquivos for($i = 0; $i &lt; $count_copy_replace; $i++) { $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;order]['copy-replace-file']['from'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;from); $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;order]['copy-replace-file']['to'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'copy-replace-file'}[$i]-&gt;attributes()-&gt;to); } } // A&Ccedil;&Atilde;O DE CRIA&Ccedil;&Atilde;O DE DIRET&Oacute;RIOS $count_mkdir = count($xml-&gt;{'package-actions'}-&gt;{'mkdir'}); if($count_mkdir &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de criacao for($i = 0; $i &lt; $count_mkdir; $i++) { $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'mkdir'}[$i]-&gt;attributes()-&gt;order]['mkdir'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'mkdir'}[$i]-&gt;attributes()-&gt;value); } } // A&Ccedil;&Atilde;O DE REMO&Ccedil;&Atilde;O DE DIRET&Oacute;RIOS $count_rmdir = count($xml-&gt;{'package-actions'}-&gt;{'rmdir'}); if($count_rmdir &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de delecao for($i = 0; $i &lt; $count_rmdir; $i++) { $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'rmdir'}[$i]-&gt;attributes()-&gt;order]['rmdir'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'rmdir'}[$i]-&gt;attributes()-&gt;value); } } // A&Ccedil;&Atilde;O DE REMO&Ccedil;&Atilde;O DE ARQUIVOS $count_unlink = count($xml-&gt;{'package-actions'}-&gt;{'unlink'}); if($count_unlink &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de remocao de arquivos for($i = 0; $i &lt; $count_unlink; $i++) { $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'unlink'}[$i]-&gt;attributes()-&gt;order]['unlink'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'unlink'}[$i]-&gt;attributes()-&gt;value); } } // A&Ccedil;&Otilde;ES DE RENAME DE ARQUIVOS/DIRETORIOS $count_rename = count($xml-&gt;{'package-actions'}-&gt;{'rename'}); if($count_rename &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de copia de arquivos for($i = 0; $i &lt; $count_rename; $i++) { $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;order]['rename']['from'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;from); $return['package-actions'][(int)$xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;order]['rename']['to'] = replace_define_constant((string)$xml-&gt;{'package-actions'}-&gt;{'rename'}[$i]-&gt;attributes()-&gt;to); } } // Organiza as a&ccedil;&otilde;es do pacote com base na ordem (&iacute;ndice do array inferior) ksort($return['package-actions']); // Total de a&ccedil;&otilde;es do pacote $return['package-total-exec'] = ($count_rmdir + $count_mkdir + $count_copy_replace + $count_sql + $count_unlink + $count_rename); // Calcula a porcentagem de cada instru&ccedil;&atilde;o $return['package-average-percentage'] = ($return['package-total-exec'] &gt; 0 ) ? ceil(100 / $return['package-total-exec']) : 0; // Verifica dependencia de pacotes $return['package-dependencies']['version'] = array(); $count_dependencies = count($xml-&gt;{'package-dependencies'}-&gt;{'version'}); if($count_dependencies &gt; 0) { // Verifica todas as instru&ccedil;&otilde;es de run sql for($i = 0; $i &lt; $count_dependencies; $i++) { $return['package-dependencies']['version'][$i] = (string)$xml-&gt;{'package-dependencies'}-&gt;{'version'}[$i]-&gt;attributes()-&gt;value; } } // Apaga os diret&oacute;rios tempor&aacute;rios $zip-&gt;close(); $zip_package-&gt;close(); $this-&gt;load-&gt;helper('file'); delete_files($temp_dir, true); @rmdir($temp_dir); // Retorno ajustado return $return; } /** * _install_package_update() * Instala o pacote de atualiza&ccedil;&atilde;o com base em um nome de arquivo j&aacute; previamente verificado e * processado. Caso existam erros durante a instala&ccedil;&atilde;o, retorna array de mensagem de erros; * @param string file_name * @return mixed status/errors */ public function _install_package_update($file_name = '') { // Seta tempo total do script para infinito set_time_limit(0); // Porcentagem atual da instala&ccedil;&atilde;o $actual_percentage = 0; // Inicializa objeto de manipulacao zip $zip = new ZipArchive(); $zip-&gt;open($file_name); // Extrai arquivo para diret&oacute;rio tempor&aacute;rio $temp_dir = 'application/temp/acme/' . uniqid(); $zip-&gt;extractTo($temp_dir); // Abre o pacote interno $package_file = $temp_dir . '/package.zip'; $zip_package = new ZipArchive(); $zip_package-&gt;open($package_file); // Descompacta pacote interno $temp_dir_package = $temp_dir . '/package'; $zip_package-&gt;extractTo($temp_dir_package); // Processa o pacote para rodar a instala&ccedil;&atilde;o $package = $this-&gt;_process_package_update($file_name); // Variavel de retorno/erros $return = array(); // Executa todas as instru&ccedil;&otilde;es, uma a uma, conforme a ordem delas no array de a&ccedil;&otilde;es foreach($package['package-actions'] as $instruction_number =&gt; $action) { switch(strtolower(key($action))) { case 'mkdir': try { if(!is_dir($action['mkdir'])) if(!mkdir($action['mkdir'])) $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel criar o diret&oacute;rio ') . $action['mkdir'] . '. '; } catch(Exception $e) { $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel criar o diret&oacute;rio ') . $action['mkdir'] . '. ' . lang('Detalhes do erro: ') . $e-&gt;getMessage(); } break; case 'rmdir': try { // Deleta o diretorio propriamente dito (com tudo dentro) if(!@delete_dir(eval_replace(htmlentities($action['rmdir'])))) $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel deletar o diret&oacute;rio ') . $action['rmdir'] . '. '; } catch(Exception $e) { $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel deletar o diret&oacute;rio ') . $action['rmdir'] . '. ' . lang('Detalhes do erro: ') . $e-&gt;getMessage(); } break; case 'unlink': try { if(file_exists($action['unlink'])) if(!@unlink($action['unlink'])) $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel remover o arquivo ') . $action['unlink'] . '. '; } catch(Exception $e) { $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel remover o arquivo ') . $action['unlink'] . '. ' . lang('Detalhes do erro: ') . $e-&gt;getMessage(); } break; case 'rename': try { if(!@rename($action['rename']['from'], $action['rename']['to'])) $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel renomear o arquivo especificado ') . '(' . lang('de') . ' ' . $action['rename']['from'] . ' ' . lang(' para ') . $action['rename']['to'] . ').'; } catch(Exception $e) { $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel renomear o arquivo especificado ') . '(' . lang('de') . ' ' . $action['rename']['from'] . ' ' . lang(' para ') . $action['rename']['to'] . ').'; } break; case 'run-sql-file': // CONECTA-SE MANUALMENTE NO BANCO DE DADOS PARA RODAR QUERY DE ARQUIVO $link = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_DATABASE, DB_PORT); $result = mysqli_multi_query($link, file_get_contents($temp_dir_package . '/' . $action['run-sql-file']['file'])); // Varre todas as instru&ccedil;&otilde;es armazenadas para acabar com o asincrono do { if($result = mysqli_store_result($link)){ mysqli_free_result($result); } } while(mysqli_next_result($link)); // Caso n&atilde;o existam erros nas instru&ccedil;&otilde;es if(!mysqli_error($link)) mysqli_close($link); else $return[$instruction_number] = lang('Erro na execu&ccedil;&atilde;o de query do arquivo') . ' ' . $action['run-sql-file']['file'] . ' ' . lang('contido no pacote. Detalhes do problema: ') . mysqli_error($link); break; case 'copy-replace-file': try { if(!@copy($temp_dir_package . '/' . $action['copy-replace-file']['from'], $action['copy-replace-file']['to'])) $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel copiar o arquivo para o local especificado ') . '(' . lang('de') . ' ' . $action['copy-replace-file']['from'] . ' ' . lang(' para ') . $action['copy-replace-file']['to'] . ').'; } catch(Exception $e) { $return[$instruction_number] = lang('N&atilde;o foi poss&iacute;vel copiar o arquivo para o local especificado ') . '(' . lang('de') . ' ' . $action['copy-replace-file']['from'] . ' ' . lang(' para ') . $action['copy-replace-file']['to'] . ').'; } break; } // Seta a porcentagem atual da instala&ccedil;&atilde;o $actual_percentage += $package['package-average-percentage']; $actual_percentage = ($actual_percentage &gt; 100) ? 100 : $actual_percentage; // Altera a porcentagem atual enviando conte&uacute;do pro browser echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#percentage_install').css('width', '" . $actual_percentage . "%');$('#progress_value').html('" . $actual_percentage . "%');
// ]]></script>
\n"; echo str_repeat(' ',1024*64); sleep(1); flush(); ob_flush(); } // Inicializa transa&ccedil;&atilde;o para inser&ccedil;&atilde;o de pacote e dados $this-&gt;db-&gt;trans_start(); // Marca o pacote como instalado no sistema $arr_ins['name'] = $package['package-name']; $arr_ins['version'] = $package['package-version']; $arr_ins['version_father'] = $package['package-version-father']; $arr_ins['path_file'] = $file_name; $arr_ins['description'] = $package['package-description']; $arr_ins['dtt_package_available'] = $package['package-dtt-available']; $arr_ins['dtt_package_installed'] = date('Y-m-d'); $this-&gt;db-&gt;insert('acm_app_package_update', $arr_ins); $id_package = $this-&gt;db-&gt;insert_id(); // Caso existam mensagens de erro, exibi-las if(count($return) &gt; 0) { // Insere no banco de dados todas as mensagens de erro, uma a uma foreach($return as $order =&gt; $error) $this-&gt;db-&gt;insert('acm_app_package_update_error_message', array('id_app_package_update' =&gt; $id_package, 'message' =&gt; $error, 'order' =&gt; $order)); // Exibe bloco de erros echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#box_errors_details').show();
// ]]></script>
\n"; echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#errors_count').html('" . count($return) . "');
// ]]></script>
\n"; echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#percentage_install').css('background-color', '#FFE875').css('border-left', '3px solid #FFA724');
// ]]></script>
\n"; echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
ajax_show_install_errors('" . $package['package-version'] . "');
// ]]></script>
\n"; echo str_repeat(' ',1024*64); flush(); ob_flush(); } // Altera a vers&atilde;o atual do sistema alterando arquivo acme_version.php $version_file = file_get_contents('application/core/acme/engine_files/updater_template_acme_version.php'); file_put_contents('application/core/acme/acme_version.php', str_replace('&lt;TEMPLATE_VERSION&gt;', $package['package-version'], $version_file)); // Finaliza a instala&ccedil;&atilde;o // Apaga os diret&oacute;rios tempor&aacute;rios $zip-&gt;close(); $zip_package-&gt;close(); $this-&gt;load-&gt;helper('file'); delete_files($temp_dir, true); rmdir($temp_dir); // Corrige retorno (caso array n&atilde;o tenha sido preenchido // em nenhum lugar, ent&atilde;o n&atilde;o ocorreram erros) if(count($return) &lt;= 0) { unset($return); $return = true; } // Exibe mensagem de finalizado com sucess echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#msg_installing').html('" . lang('Feito! Veja os detalhes abaixo.') . "');
// ]]></script>
\n"; echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#msg_install_success').show();
// ]]></script>
\n"; echo "
<script type="\&quot;text/javascript\&quot;">// <![CDATA[
$('#loading_layer_custom').remove();
// ]]></script>
\n"; echo str_repeat(' ',1024*64); flush(); ob_flush(); // Inicializa transa&ccedil;&atilde;o para inser&ccedil;&atilde;o de pacote e dados $this-&gt;db-&gt;trans_complete(); // Retorno ajustado return $return; } } </rename></copy-replace-file></run-sql-file></database> ?>